{"version":3,"sources":["ts/services/firebase.ts","ts/services/auth.ts","ts/utils/constants.ts","ts/utils/paths.ts","ts/components/Navigation.tsx","ts/components/Map.tsx","ts/containers/Home.tsx","ts/components/InfoPiece.tsx","ts/containers/Presets.tsx","ts/services/weather.ts","ts/services/errors.ts","ts/services/user.ts","ts/utils/helpers.ts","ts/forms/Profile/validation.ts","ts/forms/Profile/index.ts","ts/forms/Profile/ProfileForm.tsx","ts/containers/Profile.tsx","ts/forms/ChangePassword/validation.ts","ts/forms/ChangePassword/index.ts","ts/forms/ChangePassword/ChangePasswordForm.tsx","ts/containers/Security.tsx","App.tsx","ts/forms/SignIn/validation.ts","ts/forms/SignIn/index.ts","ts/forms/SignIn/SignInForm.tsx","ts/components/SignIn.tsx","ts/forms/SignUp/validation.ts","ts/forms/SignUp/index.ts","ts/forms/SignUp/SignUpForm.tsx","ts/components/SignUp.tsx","AppUnauthorized.tsx","theme.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","signOut","fireSignOut","EMAIL_REGEX","drawerWidth","Paths","home","presets","profile","security","signIn","signUp","Navigation","React","mobileOpen","setMobileOpen","handleDrawerToggle","mainMenuOptions","title","url","icon","profileMenuOptions","drawer","Toolbar","Divider","List","onClick","map","option","ListItem","button","component","Link","to","ListItemIcon","Icon","ListItemText","primary","AppBar","position","sx","width","sm","ml","IconButton","color","aria-label","edge","mr","display","Typography","variant","noWrap","Box","flexShrink","Drawer","container","undefined","open","onClose","ModalProps","keepMounted","xs","boxSizing","Map","props","start","end","responseCount","useRef","useState","directions","setDirections","isLoaded","useJsApiLoader","id","googleMapsApiKey","process","height","mapContainerStyle","options","origin","destination","travelMode","google","maps","TravelMode","DRIVING","callback","response","console","log","current","memo","Home","InfoPiece","mt","label","children","Presets","currentPosition","setCurrentPosition","currentWeather","setCurrentWeather","locationError","setLocationError","handleGetWeather","lat","lon","coords","latitude","longitude","get","params","appid","units","then","r","data","useEffect","navigator","geolocation","getCurrentPosition","location","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","alert","Container","Alert","severity","LinearProgress","temp","humidity","clouds","ModelName","getMessage","e","message","ErrorMessages","replace","formatUser","user","uid","name","displayName","email","phone","phoneNumber","lastSignIn","metadata","lastSignInTime","Date","newFormState","fields","state","values","messages","isValid","touched","validators","formValid","formMessage","attemptedSubmit","field","beforeSubmit","key","validateForm","handleValueChange","event","target","value","fieldValues","fieldsArray","emailValidator","match","nameValidator","length","ProfileForm","useContext","UserContext","updateUser","submitting","setSubmitting","getInitialFormState","formState","setFormState","hasChanged","setHasChanged","onSubmit","preventDefault","Promise","all","currentUser","updateProfile","reject","resolve","updateFireEmail","catch","finally","noValidate","TextField","fullWidth","defaultValue","margin","onChange","onBlur","helperText","type","Button","CircularProgress","size","Profile","password1Validator","password1","password2Validator","password2","ChangePasswordForm","password","updateFirePassword","Security","ChangePassword","App","setUser","newUser","createContext","Provider","basename","flexGrow","Stack","exact","path","passwordValidator","SignInForm","signInWithEmailAndPassword","required","autoComplete","autoFocus","mb","href","SignIn","flexDirection","alignItems","Avatar","m","bgcolor","SignUpForm","createUserWithEmailAndPassword","credential","SignUp","AppUnauthorized","className","push","LinkBehavior","forwardRef","ref","other","theme","createTheme","palette","main","secondary","components","MuiLink","defaultProps","MuiButtonBase","LinkComponent","typography","h1","fontSize","fontWeight","marginTop","h2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52ef9109.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyCyk-8pQIXG4EJOyRa3QT0yzUfr661yuyI',\n\tauthDomain: 'weather-route-e1a9c.firebaseapp.com',\n\tprojectId: 'weather-route-e1a9c',\n\tstorageBucket: 'weather-route-e1a9c.appspot.com',\n\tmessagingSenderId: '184699653844',\n\tappId: '1:184699653844:web:74997c51e6e4b49ed83541',\n}\n\n// Initialize Firebase\nexport const firebaseApp = initializeApp(firebaseConfig)\n// export const database = getDatabase(firebaseApp)\n","import {\n\tgetAuth,\n\tsignInWithEmailAndPassword,\n\tsignOut as fireSignOut,\n} from 'firebase/auth'\nimport { firebaseApp } from 'ts/services/firebase'\n\nexport const auth = getAuth(firebaseApp)\n\nexport const signIn = (email: string, password: string): Promise<void> =>\n\tsignInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n\nexport const signOut = (): Promise<void> => fireSignOut(auth)\n","export const EMAIL_REGEX =\n\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const drawerWidth = 240\n","const Paths = {\n\thome: '/home',\n\tpresets: '/presets',\n\tprofile: '/profile',\n\tsecurity: '/security',\n\tsignIn: '/signin',\n\tsignUp: '/signup',\n}\n\nexport default Paths\n","import * as React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { signOut } from 'ts/services/auth'\nimport { drawerWidth } from 'ts/utils/constants'\nimport Paths from 'ts/utils/paths'\n\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { Icon } from '@mui/material'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Divider from '@mui/material/Divider'\nimport Drawer from '@mui/material/Drawer'\nimport IconButton from '@mui/material/IconButton'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\n\nexport default function Navigation(): React.ReactElement {\n\tconst [mobileOpen, setMobileOpen] = React.useState(false)\n\n\tconst handleDrawerToggle = (): void => {\n\t\tsetMobileOpen(!mobileOpen)\n\t}\n\n\ttype menuOptions = Array<{\n\t\ttitle: string\n\t\turl: string\n\t\ticon: string\n\t}>\n\n\tconst mainMenuOptions: menuOptions = [\n\t\t{ title: 'Home', url: Paths.home, icon: 'home' },\n\t\t{ title: 'Presets', url: Paths.presets, icon: 'star' },\n\t]\n\n\tconst profileMenuOptions: menuOptions = [\n\t\t{ title: 'Profile', url: Paths.profile, icon: 'account_circle' },\n\t\t{ title: 'Security', url: Paths.security, icon: 'lock' },\n\t]\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<Toolbar />\n\t\t\t<Divider />\n\t\t\t<List onClick={handleDrawerToggle}>\n\t\t\t\t{mainMenuOptions.map(option => (\n\t\t\t\t\t<ListItem button component={Link} to={option.url} key={option.title}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Icon>{option.icon}</Icon>\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={option.title} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List onClick={handleDrawerToggle}>\n\t\t\t\t{profileMenuOptions.map(option => (\n\t\t\t\t\t<ListItem button component={Link} to={option.url} key={option.title}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Icon>{option.icon}</Icon>\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={option.title} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t\t<ListItem button onClick={signOut}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon>logout</Icon>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Sign Out' />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar\n\t\t\t\tposition='fixed'\n\t\t\t\tsx={{\n\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\tml: { sm: `${drawerWidth}px` },\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tsx={{ mr: 2, display: { sm: 'none' } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant='h6' noWrap component='div'>\n\t\t\t\t\t\tWeather Route\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Box\n\t\t\t\tcomponent='nav'\n\t\t\t\tsx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n\t\t\t\taria-label='mailbox folders'\n\t\t\t>\n\t\t\t\t<Drawer\n\t\t\t\t\tcontainer={undefined}\n\t\t\t\t\tvariant='temporary'\n\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\tModalProps={{\n\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t}}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'block', sm: 'none' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t\t<Drawer\n\t\t\t\t\tvariant='permanent'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'none', sm: 'block' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t</Box>\n\t\t</>\n\t)\n}\n","import React from 'react'\n\nimport { Box } from '@mui/system'\nimport {\n\tDirectionsRenderer,\n\tDirectionsService,\n\tGoogleMap,\n\tuseJsApiLoader,\n} from '@react-google-maps/api'\n\nexport type MapProps = {\n\tstart: string\n\tend: string\n}\n\nfunction Map(props: MapProps): React.ReactElement {\n\tconst { start, end } = props\n\n\t// Due to bug in react google maps api, this is needed to prevent infinite re-renders\n\tconst responseCount = React.useRef(0)\n\tconst [directions, setDirections] =\n\t\tReact.useState<google.maps.DirectionsResult | null>(null)\n\n\tconst { isLoaded } = useJsApiLoader({\n\t\tid: 'google-map-script',\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY ?? '',\n\t})\n\n\tconst directionsCallback = (\n\t\tresponse: google.maps.DirectionsResult | null\n\t): void => {\n\t\tconsole.log(response)\n\t\tif (response !== null && responseCount.current < 2) {\n\t\t\tresponseCount.current += 1\n\t\t\tsetDirections(response)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Box height='100%'>\n\t\t\t{isLoaded && (\n\t\t\t\t<GoogleMap\n\t\t\t\t\tmapContainerStyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DirectionsService\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\torigin: start,\n\t\t\t\t\t\t\tdestination: end,\n\t\t\t\t\t\t\ttravelMode: google.maps.TravelMode.DRIVING,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcallback={directionsCallback}\n\t\t\t\t\t/>\n\t\t\t\t\t{directions && (\n\t\t\t\t\t\t<DirectionsRenderer\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tdirections: directions,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</GoogleMap>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default React.memo(Map)\n","import React from 'react'\n\nimport Map from '../components/Map'\n\nfunction Home(): React.ReactElement {\n\treturn <Map start='logan, ut' end='ogden, ut' />\n}\n\nexport default React.memo(Home)\n","import React from 'react'\n\nimport { Box } from '@mui/system'\n\ninterface InfoPieceProps {\n\tlabel: string\n\tchildren: React.ReactNode\n}\n\nexport default function InfoPiece(props: InfoPieceProps): React.ReactElement {\n\treturn (\n\t\t<Box sx={{ mt: 1 }}>\n\t\t\t<b>{props.label}</b>\n\t\t\t<br />\n\t\t\t{props.children}\n\t\t</Box>\n\t)\n}\n","import React, { useEffect } from 'react'\n\nimport InfoPiece from 'ts/components/InfoPiece'\nimport { getWeather } from 'ts/services/weather'\nimport { CurrentWeather } from 'ts/utils/models'\n\nimport { Alert, Container, LinearProgress, Typography } from '@mui/material'\n\nexport default function Presets(): React.ReactElement {\n\tconst [currentPosition, setCurrentPosition] = React.useState<\n\t\tGeolocationPosition | null | undefined\n\t>(undefined)\n\tconst [currentWeather, setCurrentWeather] = React.useState<CurrentWeather>()\n\tconst [locationError, setLocationError] = React.useState<string>()\n\n\tconst handleGetWeather = (): void => {\n\t\tcurrentPosition &&\n\t\t\tgetWeather(\n\t\t\t\tcurrentPosition.coords.latitude,\n\t\t\t\tcurrentPosition.coords.longitude\n\t\t\t).then(r => setCurrentWeather(r.current))\n\t}\n\n\tuseEffect(() => {\n\t\tif (navigator.geolocation)\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\tlocation => setCurrentPosition(location),\n\t\t\t\terror => {\n\t\t\t\t\tswitch (error.code) {\n\t\t\t\t\t\tcase error.PERMISSION_DENIED:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetLocationError('User denied the request for Geolocation.')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase error.POSITION_UNAVAILABLE:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetLocationError('Location information is unavailable.')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase error.TIMEOUT:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetLocationError('The request to get user location timed out.')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetLocationError('An unknown error occurred.')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\telse alert('Geolocation is not supported by this browser.')\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (currentPosition) handleGetWeather()\n\t}, [currentPosition])\n\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Presets</Typography>\n\t\t\t<Alert severity='warning' sx={{ mt: 2 }}>\n\t\t\t\tThis page will be used for saving favorite routes to quickly reuse.\n\t\t\t</Alert>\n\t\t\t<Typography variant='h2'>Weather Service</Typography>\n\t\t\t<p>For now, this is a demonstration of the weather API service.</p>\n\n\t\t\t{(!currentWeather || currentPosition === undefined) && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant='overline'>\n\t\t\t\t\t\t{!currentPosition\n\t\t\t\t\t\t\t? 'Getting current location...'\n\t\t\t\t\t\t\t: 'Getting weather...'}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<LinearProgress />\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{currentPosition === null && (\n\t\t\t\t<Alert severity='error'>{locationError}</Alert>\n\t\t\t)}\n\n\t\t\t{currentWeather && (\n\t\t\t\t<div>\n\t\t\t\t\t<InfoPiece label='Temperature'>{currentWeather?.temp}ºF</InfoPiece>\n\t\t\t\t\t<InfoPiece label='Humidity'>{currentWeather?.humidity}%</InfoPiece>\n\t\t\t\t\t<InfoPiece label='Cloud Cover'>{currentWeather?.clouds}%</InfoPiece>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Container>\n\t)\n}\n","import get from 'axios'\nimport { Weather } from 'ts/utils/models'\n\nconst openWeatherMapApi = 'https://api.openweathermap.org/data/2.5'\n\nexport const getWeather = (lat: number, lon: number): Promise<Weather> =>\n\tget(`${openWeatherMapApi}/onecall`, {\n\t\tparams: {\n\t\t\tlat: lat,\n\t\t\tlon: lon,\n\t\t\tappid: process.env.REACT_APP_OPEN_WEATHER_MAP,\n\t\t\tunits: 'imperial',\n\t\t},\n\t}).then(r => r.data)\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Recent login required. Please sign out then sign back in to perform this action',\n\t'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n\t'auth/email-already-in-use': 'An account already exists with this email',\n}\n","import {\n\tcreateUserWithEmailAndPassword,\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from 'firebase/auth'\nimport { auth } from 'ts/services/auth'\nimport { User } from 'ts/utils/models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t\tlastSignIn:\n\t\t\t\t(user.metadata.lastSignInTime &&\n\t\t\t\t\tnew Date(user.metadata.lastSignInTime)) ||\n\t\t\t\tundefined,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   POST\n// --------------------------------------------------\n\nexport const signUp = (\n\temail: string,\n\tpassword: string,\n\tname?: string\n): Promise<void> =>\n\tcreateUserWithEmailAndPassword(auth, email, password).then(credential =>\n\t\tupdateProfile(credential.user, { displayName: name })\n\t)\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateProfile(auth.currentUser, { displayName: name })\n\t\t: Promise.reject()\n\nexport const updateEmail = (email: string): Promise<void> =>\n\tauth.currentUser ? updateFireEmail(auth.currentUser, email) : Promise.reject()\n\nexport const updatePassword = (password: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateFirePassword(auth.currentUser, password)\n\t\t: Promise.reject()\n","import { FormState } from 'ts/utils/models'\n\nexport function newFormState<FieldNames extends string>(\n\tfields: readonly FieldNames[]\n): FormState<FieldNames> {\n\tconst state: FormState<FieldNames> = {\n\t\tvalues: {} as Record<FieldNames, string>,\n\t\tmessages: {} as Record<FieldNames, string>,\n\t\tisValid: {} as Record<FieldNames, boolean>,\n\t\ttouched: {} as Record<FieldNames, boolean>,\n\t\tvalidators: {} as Record<\n\t\t\tFieldNames,\n\t\t\t(state: FormState<FieldNames>) => FormState<FieldNames>\n\t\t>,\n\t\tformValid: false,\n\t\tformMessage: '',\n\t\tattemptedSubmit: false,\n\t}\n\tfor (const field of fields) {\n\t\tstate.values[field] = ''\n\t\tstate.messages[field] = ''\n\t\tstate.isValid[field] = false\n\t\tstate.touched[field] = false\n\t\tstate.validators[field] = (): FormState<FieldNames> => state\n\t}\n\treturn state\n}\n\nexport function beforeSubmit<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tstate = validateForm(state)\n\tfor (const key in state.touched) state.touched[key] = true\n\tstate.attemptedSubmit = true\n\tif (!state.formValid) state.formMessage = 'Please fix the errors in the form'\n\treturn state\n}\n\nexport function validateForm<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tlet isValid = true\n\tfor (const key in state.validators) {\n\t\tstate = state.validators[key](state)\n\t\tif (!state.isValid[key]) isValid = false\n\t}\n\tstate.formValid = isValid\n\treturn state\n}\n\nexport function handleValueChange<FieldNames extends string>(\n\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tconst name = event.target.name as FieldNames\n\tconst value = event.target.value\n\n\tif (!state.isValid[name]) state = state.validators[name](state)\n\tconst fieldValues = state.values\n\tfieldValues[name] = value\n\treturn { ...state, values: fieldValues }\n}\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState, User } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'email'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (user: User): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalues: {\n\t\t\tname: user.name ?? '',\n\t\t\temail: user.email ?? '',\n\t\t},\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tname: nameValidator,\n\t\t},\n\t}\n}\n","import ProfileForm from './ProfileForm'\n\nexport default ProfileForm\n","import React, { useContext, useEffect } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState(user))\n\tconst [hasChanged, setHasChanged] = React.useState(false)\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsetHasChanged(\n\t\t\t\tuser.name !== formState.values.name ||\n\t\t\t\t\tuser.email !== formState.values.email\n\t\t\t),\n\t\t[formState]\n\t)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tPromise.all([\n\t\t\tuser.name !== formState.values.name\n\t\t\t\t? updateName(formState.values.name)\n\t\t\t\t: Promise.resolve(),\n\t\t\tuser.email !== formState.values.email\n\t\t\t\t? updateEmail(formState.values.email)\n\t\t\t\t: Promise.resolve(),\n\t\t])\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tdefaultValue={user.name}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Email'\n\t\t\t\ttype='email'\n\t\t\t\tname='email'\n\t\t\t\tdefaultValue={user.email}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, display: hasChanged ? 'default' : 'none' }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Save Changes'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ProfileForm from 'ts/forms/Profile'\n\nimport { Container, Typography } from '@mui/material'\n\nexport default function Profile(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Edit Profile</Typography>\n\t\t\t<ProfileForm />\n\t\t</Container>\n\t)\n}\n","import { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 0\n\tstate.messages.password1 = state.isValid.password1 ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password1 === state.values.password2\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import ChangePasswordForm from './ChangePasswordForm'\n\nexport default ChangePasswordForm\n","import React, { useContext } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ChangePasswordForm(): React.ReactElement {\n\tconst { updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tupdatePassword(formState.values.password1)\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password1'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Confirm New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password2'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button type='submit' fullWidth variant='contained' sx={{ mt: 2 }}>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Change Password'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ChangePasswordForm from 'ts/forms/ChangePassword'\n\nimport { Container, Typography } from '@mui/material'\n\nexport default function Security(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Change Password</Typography>\n\t\t\t<ChangePasswordForm />\n\t\t</Container>\n\t)\n}\n","import React, { Context, useState } from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Navigation from 'ts/components/Navigation'\nimport Home from 'ts/containers/Home'\nimport Presets from 'ts/containers/Presets'\nimport Profile from 'ts/containers/Profile'\nimport Security from 'ts/containers/Security'\nimport { getUser } from 'ts/services/user'\nimport { drawerWidth } from 'ts/utils/constants'\nimport { User } from 'ts/utils/models'\nimport Paths from 'ts/utils/paths'\n\nimport { Box, Stack, Toolbar } from '@mui/material'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<Box sx={{ display: 'flex', height: '100vh' }}>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='main'\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Stack height='100%'>\n\t\t\t\t\t\t\t<Toolbar />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path={Paths.home} component={Home} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.presets} component={Presets} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.profile} component={Profile} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.security} component={Security} />\n\n\t\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t\t\t<Redirect to={Paths.home} />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Box>\n\t\t\t\t</HashRouter>\n\t\t\t</Box>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['email', 'password'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const passwordValidator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password = state.values.password.length > 0\n\tstate.messages.password = state.isValid.password ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tpassword: passwordValidator,\n\t\t},\n\t}\n}\n","import SignInForm from './SignInForm'\n\nexport default SignInForm\n","import React from 'react'\n\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport {\n\tAlert,\n\tBox,\n\tButton,\n\tCircularProgress,\n\tLink,\n\tTextField,\n} from '@mui/material'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignInForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignIn(formState.values.email, formState.values.password)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\ttype='email'\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password'\n\t\t\t\tautoComplete='current-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password && !formState.isValid.password}\n\t\t\t\thelperText={formState.touched.password && formState.messages.password}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button type='submit' fullWidth variant='contained' sx={{ mt: 2, mb: 2 }}>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign In'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signUp} variant='body2'>\n\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignInForm from 'ts/forms/SignIn'\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport { Avatar, Box, Container, Typography } from '@mui/material'\n\nexport default function SignIn(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<SignInForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'email', 'password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 4\n\tstate.messages.password1 = state.isValid.password1\n\t\t? ''\n\t\t: 'Must be at least 5 characters long'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password2 === state.values.password1\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tname: nameValidator,\n\t\t\temail: emailValidator,\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import SignUpForm from './SignUpForm'\n\nexport default SignUpForm\n","import * as React from 'react'\n\nimport { getMessage } from 'ts/services/errors'\nimport { signUp } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport { Alert, CircularProgress, Link } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignUpForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignUp(\n\t\t\tformState.values.email,\n\t\t\tformState.values.password1,\n\t\t\tformState.values.name\n\t\t)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='name'\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tautoComplete='name'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\ttype='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password1'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password1'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password2'\n\t\t\t\tlabel='Confirm Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password2'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button type='submit' fullWidth variant='contained' sx={{ mt: 2, mb: 2 }}>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign Up'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signIn} variant='body2'>\n\t\t\t\t{'Already have an account? Sign In'}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignUpForm from 'ts/forms/SignUp'\n\nimport PersonIcon from '@mui/icons-material/Person'\nimport { Container } from '@mui/material'\nimport Avatar from '@mui/material/Avatar'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\n\nexport default function SignUp(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<PersonIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign Up\n\t\t\t\t</Typography>\n\t\t\t\t<SignUpForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/components/SignIn'\nimport SignUp from 'ts/components/SignUp'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\t\t\t\t\t<Route exact path={Paths.signUp} component={SignUp} />\n\n\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import React from 'react'\n\nimport {\n\tLink as RouterLink,\n\tLinkProps as RouterLinkProps,\n} from 'react-router-dom'\n\nimport { createTheme } from '@mui/material/styles'\n\n// Allow adapting MUI links to react-router-dom links\nconst LinkBehavior = React.forwardRef<\n\tany,\n\tOmit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n\tconst { href, ...other } = props\n\t// Map href (MUI) -> to (react-router)\n\treturn <RouterLink ref={ref} to={href} {...other} />\n})\n\nLinkBehavior.displayName = 'LinkBehavior'\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#2a8544',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#f50057',\n\t\t},\n\t},\n\tcomponents: {\n\t\tMuiLink: {\n\t\t\tdefaultProps: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tcomponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\tdefaultProps: {\n\t\t\t\tLinkComponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t},\n\ttypography: {\n\t\th1: {\n\t\t\tcolor: '#2a8544',\n\t\t\tfontSize: '2.5rem',\n\t\t\tfontWeight: '500',\n\t\t\tmarginTop: '1.5rem',\n\t\t},\n\t\th2: {\n\t\t\tcolor: '#2a8544',\n\t\t\tfontSize: '1.5rem',\n\t\t\tfontWeight: '500',\n\t\t\tmarginTop: '1.5rem',\n\t\t},\n\t},\n})\n\nexport default theme\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = (): void => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = (): void => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister(): void {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import 'sass/index.scss'\nimport 'sass/App.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from 'App'\nimport AppUnauthorized from 'AppUnauthorized'\nimport theme from 'theme'\nimport { auth } from 'ts/services/auth'\nimport { formatUser } from 'ts/services/user'\n\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser)\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<App user={user} />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<AppUnauthorized />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}