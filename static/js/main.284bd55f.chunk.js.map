{"version":3,"sources":["ts/utils/paths.ts","ts/components/Navigation.tsx","ts/services/firebase.ts","ts/services/auth.ts","ts/containers/Account.tsx","ts/containers/Favorites.tsx","ts/containers/Home.tsx","App.tsx","ts/services/user.ts","ts/services/errors.ts","ts/utils/constants.ts","ts/utils/helpers.ts","ts/components/SignIn.tsx","ts/components/SignUp.tsx","AppUnauthorized.tsx","theme.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["Paths","home","map","account","signIn","signUp","Navigation","React","useLocation","pathname","value","setValue","Paper","elevation","BottomNavigation","showLabels","onChange","_event","newValue","BottomNavigationAction","component","Link","to","label","icon","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","signOut","fireSignOut","Account","user","useContext","UserContext","Container","name","email","lastSignIn","toLocaleString","Button","fullWidth","variant","onClick","Favorites","Home","isLoaded","useJsApiLoader","id","googleMapsApiKey","process","Box","height","mapContainerStyle","width","center","lat","lng","zoom","memo","formatUser","uid","displayName","phone","phoneNumber","metadata","lastSignInTime","Date","undefined","App","ModelName","props","useState","setUser","updateUser","newUser","currentUser","createContext","Provider","basename","Stack","direction","justifyContent","alignItems","overflow","exact","path","getMessage","e","message","ErrorMessages","code","replace","EMAIL_REGEX","newFormState","fields","state","values","messages","isValid","touched","validators","formValid","formMessage","attemptedSubmit","field","beforeSubmit","key","validateForm","handleValueChange","event","target","fieldValues","fieldsArray","emailValidator","match","passwordValidator","password","length","SignIn","isLoading","setIsLoading","formState","setFormState","maxWidth","sx","mt","display","flexDirection","Avatar","m","bgcolor","Typography","onSubmit","preventDefault","signInWithEmailAndPassword","then","Promise","resolve","catch","finally","noValidate","TextField","margin","required","autoComplete","autoFocus","onBlur","error","helperText","type","Alert","severity","mb","CircularProgress","size","color","href","nameValidator","password1Validator","password1","password2Validator","password2","SignUp","createUserWithEmailAndPassword","credential","updateProfile","AppUnauthorized","className","push","LinkBehavior","forwardRef","ref","other","theme","createTheme","palette","primary","main","secondary","red","A400","components","MuiLink","defaultProps","MuiButtonBase","LinkComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.284bd55f.chunk.js","sourcesContent":["const Paths = {\n\thome: '/home',\n\tmap: '/map',\n\taccount: '/account',\n\tsignIn: '/signin',\n\tsignUp: '/signup',\n}\n\nexport default Paths\n","import * as React from 'react'\n\nimport { Link, useLocation } from 'react-router-dom'\nimport Paths from 'ts/utils/paths'\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport HomeIcon from '@mui/icons-material/Home'\nimport StarIcon from '@mui/icons-material/Star'\nimport { BottomNavigation, BottomNavigationAction, Paper } from '@mui/material'\n\nexport default function Navigation(): React.ReactElement {\n\tconst [value, setValue] = React.useState(useLocation().pathname)\n\n\treturn (\n\t\t<Paper elevation={3}>\n\t\t\t<BottomNavigation\n\t\t\t\tshowLabels\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(_event, newValue): void => {\n\t\t\t\t\tsetValue(newValue)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<BottomNavigationAction\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={Paths.home}\n\t\t\t\t\tvalue={Paths.home}\n\t\t\t\t\tlabel='Home'\n\t\t\t\t\ticon={<HomeIcon />}\n\t\t\t\t/>\n\t\t\t\t<BottomNavigationAction\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={Paths.map}\n\t\t\t\t\tvalue={Paths.map}\n\t\t\t\t\tlabel='Favorites'\n\t\t\t\t\ticon={<StarIcon />}\n\t\t\t\t/>\n\t\t\t\t<BottomNavigationAction\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={Paths.account}\n\t\t\t\t\tvalue={Paths.account}\n\t\t\t\t\tlabel='Account'\n\t\t\t\t\ticon={<AccountCircleIcon />}\n\t\t\t\t/>\n\t\t\t</BottomNavigation>\n\t\t</Paper>\n\t)\n}\n","import { initializeApp } from 'firebase/app'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyCyk-8pQIXG4EJOyRa3QT0yzUfr661yuyI',\n\tauthDomain: 'weather-route-e1a9c.firebaseapp.com',\n\tprojectId: 'weather-route-e1a9c',\n\tstorageBucket: 'weather-route-e1a9c.appspot.com',\n\tmessagingSenderId: '184699653844',\n\tappId: '1:184699653844:web:74997c51e6e4b49ed83541',\n}\n\n// Initialize Firebase\nexport const firebaseApp = initializeApp(firebaseConfig)\n// export const database = getDatabase(firebaseApp)\n","import {\n\tgetAuth,\n\tsignInWithEmailAndPassword,\n\tsignOut as fireSignOut,\n} from 'firebase/auth'\nimport { firebaseApp } from 'ts/services/firebase'\n\nexport const auth = getAuth(firebaseApp)\n\nexport const signIn = (email: string, password: string): Promise<void> =>\n\tsignInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n\nexport const signOut = (): Promise<void> => fireSignOut(auth)\n","import React, { useContext } from 'react'\n\nimport { UserContext } from 'App'\nimport { signOut } from 'ts/services/auth'\n\nimport Button from '@mui/material/Button'\nimport Container from '@mui/material/Container'\n\nexport default function Account(): React.ReactElement {\n\tconst { user } = useContext(UserContext)\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Account</h1>\n\t\t\t<p>\n\t\t\t\t<b>Name:</b> {user.name} <br />\n\t\t\t\t<b>Email:</b> {user.email} <br />\n\t\t\t\t<b>Last Sign-in:</b> {user.lastSignIn?.toLocaleString()} <br />\n\t\t\t</p>\n\t\t\t<Button fullWidth variant='contained' onClick={signOut}>\n\t\t\t\tSign Out\n\t\t\t</Button>\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport Container from '@mui/material/Container'\n\nexport default function Favorites(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Favorites</h1>\n\t\t\t<p>This is the favorites page</p>\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport { Box } from '@mui/system'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'\n\nfunction Home(): React.ReactElement {\n\tconst { isLoaded } = useJsApiLoader({\n\t\tid: 'google-map-script',\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY ?? '',\n\t})\n\n\treturn (\n\t\t<Box height='100%'>\n\t\t\t{isLoaded && (\n\t\t\t\t<GoogleMap\n\t\t\t\t\tmapContainerStyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t}}\n\t\t\t\t\tcenter={{\n\t\t\t\t\t\tlat: -3.745,\n\t\t\t\t\t\tlng: -38.523,\n\t\t\t\t\t}}\n\t\t\t\t\tzoom={10}\n\t\t\t\t>\n\t\t\t\t\t{/* Child components, such as markers, info windows, etc. */}\n\t\t\t\t\t<></>\n\t\t\t\t</GoogleMap>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default React.memo(Home)\n","import React, { Context, useState } from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Navigation from 'ts/components/Navigation'\nimport Account from 'ts/containers/Account'\nimport Favorites from 'ts/containers/Favorites'\nimport Home from 'ts/containers/Home'\nimport { User } from 'ts/services/models'\nimport { getUser } from 'ts/services/user'\nimport Paths from 'ts/utils/paths'\n\nimport { Stack } from '@mui/material'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<div>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Stack\n\t\t\t\t\t\theight='100vh'\n\t\t\t\t\t\tdirection='column'\n\t\t\t\t\t\tjustifyContent='space-between'\n\t\t\t\t\t\talignItems='stretch'\n\t\t\t\t\t\toverflow='auto'\n\t\t\t\t\t>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path={Paths.home} component={Home} />\n\t\t\t\t\t\t\t<Route exact path={Paths.map} component={Favorites} />\n\t\t\t\t\t\t\t<Route exact path={Paths.account} component={Account} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.home} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t</Stack>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import {\n\tcreateUserWithEmailAndPassword,\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from 'firebase/auth'\nimport { auth } from 'ts/services/auth'\nimport { User } from 'ts/services/models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t\tlastSignIn:\n\t\t\t\t(user.metadata.lastSignInTime &&\n\t\t\t\t\tnew Date(user.metadata.lastSignInTime)) ||\n\t\t\t\tundefined,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   POST\n// --------------------------------------------------\n\nexport const signUp = (\n\temail: string,\n\tpassword: string,\n\tname?: string\n): Promise<void> =>\n\tcreateUserWithEmailAndPassword(auth, email, password).then(credential =>\n\t\tupdateProfile(credential.user, { displayName: name })\n\t)\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateProfile(auth.currentUser, { displayName: name })\n\t\t: Promise.reject()\n\nexport const updateEmail = (email: string): Promise<void> =>\n\tauth.currentUser ? updateFireEmail(auth.currentUser, email) : Promise.reject()\n\nexport const updatePassword = (password: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateFirePassword(auth.currentUser, password)\n\t\t: Promise.reject()\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Please sign out then sign back in to perform this action',\n\t'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n\t'auth/email-already-in-use': 'An account already exists with this email',\n}\n","export const EMAIL_REGEX =\n\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n","import { FormState } from 'ts/services/models'\n\nexport function newFormState<FieldNames extends string>(\n\tfields: readonly FieldNames[]\n): FormState<FieldNames> {\n\tconst state: FormState<FieldNames> = {\n\t\tvalues: {} as Record<FieldNames, string>,\n\t\tmessages: {} as Record<FieldNames, string>,\n\t\tisValid: {} as Record<FieldNames, boolean>,\n\t\ttouched: {} as Record<FieldNames, boolean>,\n\t\tvalidators: {} as Record<\n\t\t\tFieldNames,\n\t\t\t(state: FormState<FieldNames>) => FormState<FieldNames>\n\t\t>,\n\t\tformValid: false,\n\t\tformMessage: '',\n\t\tattemptedSubmit: false,\n\t}\n\tfor (const field of fields) {\n\t\tstate.values[field] = ''\n\t\tstate.messages[field] = ''\n\t\tstate.isValid[field] = false\n\t\tstate.touched[field] = false\n\t\tstate.validators[field] = (): FormState<FieldNames> => state\n\t}\n\treturn state\n}\n\nexport function beforeSubmit<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tstate = validateForm(state)\n\tfor (const key in state.touched) state.touched[key] = true\n\tstate.attemptedSubmit = true\n\tif (!state.formValid) state.formMessage = 'Please fix the errors in the form'\n\treturn state\n}\n\nexport function validateForm<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tlet isValid = true\n\tfor (const key in state.validators) {\n\t\tstate = state.validators[key](state)\n\t\tif (!state.isValid[key]) isValid = false\n\t}\n\tstate.formValid = isValid\n\treturn state\n}\n\nexport function handleValueChange<FieldNames extends string>(\n\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tconst name = event.target.name as FieldNames\n\tconst value = event.target.value\n\n\tif (!state.isValid[name]) state = state.validators[name](state)\n\tconst fieldValues = state.values\n\tfieldValues[name] = value\n\treturn { ...state, values: fieldValues }\n}\n","import * as React from 'react'\n\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\nimport { FormState } from 'ts/services/models'\nimport { EMAIL_REGEX } from 'ts/utils/constants'\nimport {\n\tbeforeSubmit,\n\thandleValueChange,\n\tnewFormState,\n\tvalidateForm,\n} from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport {\n\tAlert,\n\tAvatar,\n\tBox,\n\tButton,\n\tCircularProgress,\n\tContainer,\n\tLink,\n\tTextField,\n\tTypography,\n} from '@mui/material'\n\nconst fieldsArray = ['email', 'password'] as const\ntype Fields = typeof fieldsArray[number]\n\nconst emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nconst passwordValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.password = state.values.password.length > 0\n\tstate.messages.password = state.isValid.password ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport default function SignIn(): React.ReactElement {\n\tconst [isLoading, setIsLoading] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState<FormState<Fields>>({\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tpassword: passwordValidator,\n\t\t},\n\t})\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetIsLoading(true)\n\n\t\tsignIn(formState.values.email, formState.values.password)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setIsLoading(false))\n\t}\n\n\treturn (\n\t\t<Container component='main' maxWidth='xs'>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\t\tformState.touched.password = true\n\t\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={formState.touched.password && !formState.isValid.password}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\tformState.touched.password && formState.messages.password\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tsx={{ mt: 2, mb: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t'Sign In'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Link href={Paths.signUp} variant='body2'>\n\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t</Link>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import * as React from 'react'\n\nimport { getMessage } from 'ts/services/errors'\nimport { FormState } from 'ts/services/models'\nimport { signUp } from 'ts/services/user'\nimport { EMAIL_REGEX } from 'ts/utils/constants'\nimport {\n\tbeforeSubmit,\n\thandleValueChange,\n\tnewFormState,\n\tvalidateForm,\n} from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport PersonIcon from '@mui/icons-material/Person'\nimport { Alert, CircularProgress, Link } from '@mui/material'\nimport Avatar from '@mui/material/Avatar'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport Container from '@mui/material/Container'\nimport TextField from '@mui/material/TextField'\nimport Typography from '@mui/material/Typography'\n\nconst fieldsArray = ['name', 'email', 'password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nconst nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nconst emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nconst password1Validator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 4\n\tstate.messages.password1 = state.isValid.password1\n\t\t? ''\n\t\t: 'Must be at least 5 characters long'\n\treturn { ...state }\n}\n\nconst password2Validator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password2 === state.values.password1\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport default function SignUp(): React.ReactElement {\n\tconst [isLoading, setIsLoading] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState<FormState<Fields>>({\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tname: nameValidator,\n\t\t\temail: emailValidator,\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t})\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetIsLoading(true)\n\n\t\tsignUp(\n\t\t\tformState.values.email,\n\t\t\tformState.values.password1,\n\t\t\tformState.values.name\n\t\t)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setIsLoading(false))\n\t}\n\n\treturn (\n\t\t<Container component='main' maxWidth='xs'>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<PersonIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign Up\n\t\t\t\t</Typography>\n\t\t\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\tname='name'\n\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname='password1'\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tid='password1'\n\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\tformState.touched.password1 && formState.messages.password1\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname='password2'\n\t\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tid='password2'\n\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\tformState.touched.password2 && formState.messages.password2\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tsx={{ mt: 2, mb: 2 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t'Sign Up'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Link href={Paths.signIn} variant='body2'>\n\t\t\t\t\t\t{'Already have an account? Sign In'}\n\t\t\t\t\t</Link>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/components/SignIn'\nimport SignUp from 'ts/components/SignUp'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\t\t\t\t\t<Route exact path={Paths.signUp} component={SignUp} />\n\n\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import React from 'react'\n\nimport {\n\tLink as RouterLink,\n\tLinkProps as RouterLinkProps,\n} from 'react-router-dom'\n\nimport { red } from '@mui/material/colors'\nimport { createTheme } from '@mui/material/styles'\n\nconst LinkBehavior = React.forwardRef<\n\tany,\n\tOmit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n\tconst { href, ...other } = props\n\t// Map href (MUI) -> to (react-router)\n\treturn <RouterLink ref={ref} to={href} {...other} />\n})\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#556cd6',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#19857b',\n\t\t},\n\t\terror: {\n\t\t\tmain: red.A400,\n\t\t},\n\t},\n\tcomponents: {\n\t\tMuiLink: {\n\t\t\tdefaultProps: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tcomponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\tdefaultProps: {\n\t\t\t\tLinkComponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t},\n})\n\nexport default theme\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = (): void => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = (): void => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister(): void {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import 'sass/index.scss'\nimport 'sass/App.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from 'App'\nimport AppUnauthorized from 'AppUnauthorized'\nimport theme from 'theme'\nimport { auth } from 'ts/services/auth'\nimport { formatUser } from 'ts/services/user'\n\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser)\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<App user={user} />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<AppUnauthorized />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}