{"version":3,"sources":["ts/services/firebase.ts","ts/services/auth.ts","ts/utils/constants.ts","ts/utils/paths.ts","ts/components/Navigation.tsx","ts/components/Map.tsx","ts/containers/Home.tsx","ts/services/errors.ts","ts/services/user.ts","ts/utils/helpers.ts","ts/forms/Profile/validation.ts","ts/forms/Profile/index.ts","ts/forms/Profile/ProfileForm.tsx","ts/containers/Profile.tsx","ts/services/savedRoutes.ts","theme.tsx","ts/forms/NewSavedRoute/validation.ts","ts/forms/NewSavedRoute/NewSavedRouteForm.tsx","ts/forms/NewSavedRoute/index.ts","ts/containers/SavedRoutes/NewRouteDialog.tsx","ts/containers/SavedRoutes/SavedRouteListItem.tsx","ts/containers/SavedRoutes/index.ts","ts/containers/SavedRoutes/SavedRoutes.tsx","ts/forms/ChangePassword/validation.ts","ts/forms/ChangePassword/index.ts","ts/forms/ChangePassword/ChangePasswordForm.tsx","ts/containers/Security.tsx","ts/components/InfoPiece.tsx","ts/containers/Weather.tsx","ts/services/weather.ts","App.tsx","ts/forms/SignIn/validation.ts","ts/forms/SignIn/index.ts","ts/forms/SignIn/SignInForm.tsx","ts/components/SignIn.tsx","ts/forms/SignUp/validation.ts","ts/forms/SignUp/index.ts","ts/forms/SignUp/SignUpForm.tsx","ts/components/SignUp.tsx","AppUnauthorized.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","getFirestore","auth","getAuth","signOut","fireSignOut","EMAIL_REGEX","drawerWidth","Paths","home","savedRoutes","weather","profile","security","signIn","signUp","Navigation","React","mobileOpen","setMobileOpen","handleDrawerToggle","mainMenuOptions","title","url","icon","profileMenuOptions","drawer","Toolbar","Divider","List","onClick","map","option","ListItem","button","component","Link","to","ListItemIcon","Icon","ListItemText","primary","location","reload","AppBar","position","sx","width","sm","ml","IconButton","color","aria-label","edge","mr","display","Typography","variant","noWrap","Box","flexShrink","Drawer","container","undefined","open","onClose","ModalProps","keepMounted","xs","boxSizing","Map","props","start","end","responseCount","useRef","useState","directions","setDirections","isLoaded","useJsApiLoader","id","googleMapsApiKey","process","height","mapContainerStyle","options","origin","destination","travelMode","google","maps","TravelMode","DRIVING","callback","response","current","memo","Home","ModelName","getMessage","e","message","ErrorMessages","code","replace","formatUser","user","uid","name","displayName","email","phone","phoneNumber","lastSignIn","metadata","lastSignInTime","Date","getUser","currentUser","newFormState","fields","state","values","messages","isValid","touched","validators","formValid","formMessage","attemptedSubmit","field","beforeSubmit","key","validateForm","handleValueChange","event","target","value","fieldValues","fieldsArray","emailValidator","match","nameValidator","length","ProfileForm","useContext","UserContext","updateUser","submitting","setSubmitting","getInitialFormState","formState","setFormState","hasChanged","setHasChanged","useEffect","onSubmit","preventDefault","Promise","all","updateProfile","reject","resolve","updateFireEmail","then","catch","finally","noValidate","TextField","fullWidth","label","defaultValue","margin","onChange","onBlur","error","helperText","type","Alert","mt","severity","Button","disabled","CircularProgress","size","Profile","Container","LinkBehavior","forwardRef","ref","href","other","theme","createTheme","palette","main","secondary","components","MuiLink","defaultProps","MuiButtonBase","LinkComponent","typography","h1","fontSize","fontWeight","marginTop","h2","startValidator","endValidator","NewSavedRouteFormId","NewSavedRouteForm","submitCallback","route","userCollection","collection","setDoc","doc","newSavedRoute","begin","lat","parseInt","lon","NewRouteDialog","fullScreen","useMediaQuery","breakpoints","down","Dialog","maxWidth","DialogTitle","DialogContent","dividers","NewSavedRoute","DialogActions","pb","form","SavedRouteListItem","changeCallback","anchorEl","setAnchorEl","Boolean","disablePadding","secondaryAction","currentTarget","ListItemButton","MenuListProps","MenuItem","deleteDoc","deleteSavedRoute","alert","SavedRoutes","setSavedRoutes","errorText","setErrorText","showDialog","setShowDialog","updateSavedRoutes","getDocs","r","routes","forEach","push","data","getSavedRoutes","mb","Fab","bottom","right","mx","password1Validator","password1","password2Validator","password2","ChangePasswordForm","password","updateFirePassword","Security","ChangePassword","InfoPiece","children","Weather","currentPosition","setCurrentPosition","currentWeather","setCurrentWeather","handleGetWeather","coords","latitude","longitude","get","params","appid","units","navigator","geolocation","getCurrentPosition","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","LinearProgress","temp","humidity","clouds","App","setUser","newUser","createContext","Provider","basename","flexGrow","Stack","exact","path","passwordValidator","SignInForm","signInWithEmailAndPassword","required","autoComplete","autoFocus","SignIn","flexDirection","alignItems","Avatar","m","bgcolor","SignUpForm","createUserWithEmailAndPassword","credential","SignUp","AppUnauthorized","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","hostname","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.70c7031d.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getFirestore } from 'firebase/firestore'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyCyk-8pQIXG4EJOyRa3QT0yzUfr661yuyI',\n\tauthDomain: 'weather-route-e1a9c.firebaseapp.com',\n\tprojectId: 'weather-route-e1a9c',\n\tstorageBucket: 'weather-route-e1a9c.appspot.com',\n\tmessagingSenderId: '184699653844',\n\tappId: '1:184699653844:web:74997c51e6e4b49ed83541',\n}\n\n// Initialize Firebase\nexport const firebaseApp = initializeApp(firebaseConfig)\nexport const database = getFirestore()\n","import {\n\tgetAuth,\n\tsignInWithEmailAndPassword,\n\tsignOut as fireSignOut,\n} from 'firebase/auth'\nimport { firebaseApp } from 'ts/services/firebase'\n\nexport const auth = getAuth(firebaseApp)\n\nexport const signIn = (email: string, password: string): Promise<void> =>\n\tsignInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n\nexport const signOut = (): Promise<void> => fireSignOut(auth)\n","export const EMAIL_REGEX =\n\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const drawerWidth = 240\n","const Paths = {\n\thome: '/home',\n\tsavedRoutes: '/saved-routes',\n\tweather: '/weather',\n\tprofile: '/profile',\n\tsecurity: '/security',\n\tsignIn: '/signin',\n\tsignUp: '/signup',\n}\n\nexport default Paths\n","import * as React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { signOut } from 'ts/services/auth'\nimport { drawerWidth } from 'ts/utils/constants'\nimport Paths from 'ts/utils/paths'\n\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { Icon } from '@mui/material'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Divider from '@mui/material/Divider'\nimport Drawer from '@mui/material/Drawer'\nimport IconButton from '@mui/material/IconButton'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\n\nexport default function Navigation(): React.ReactElement {\n\tconst [mobileOpen, setMobileOpen] = React.useState(false)\n\n\tconst handleDrawerToggle = (): void => {\n\t\tsetMobileOpen(!mobileOpen)\n\t}\n\n\ttype menuOptions = Array<{\n\t\ttitle: string\n\t\turl: string\n\t\ticon: string\n\t}>\n\n\tconst mainMenuOptions: menuOptions = [\n\t\t{ title: 'Home', url: Paths.home, icon: 'home' },\n\t\t{ title: 'Saved Routes', url: Paths.savedRoutes, icon: 'star' },\n\t\t{ title: 'Weather', url: Paths.weather, icon: 'wb_sunny' },\n\t]\n\n\tconst profileMenuOptions: menuOptions = [\n\t\t{ title: 'Profile', url: Paths.profile, icon: 'account_circle' },\n\t\t{ title: 'Security', url: Paths.security, icon: 'lock' },\n\t]\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<Toolbar />\n\t\t\t<Divider />\n\t\t\t<List onClick={handleDrawerToggle}>\n\t\t\t\t{mainMenuOptions.map(option => (\n\t\t\t\t\t<ListItem button component={Link} to={option.url} key={option.title}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Icon>{option.icon}</Icon>\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={option.title} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List onClick={handleDrawerToggle}>\n\t\t\t\t{profileMenuOptions.map(option => (\n\t\t\t\t\t<ListItem button component={Link} to={option.url} key={option.title}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Icon>{option.icon}</Icon>\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={option.title} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t\t<ListItem button onClick={(): void => location.reload()}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon>refresh</Icon>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Refresh' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button onClick={signOut}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon>logout</Icon>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Sign Out' />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar\n\t\t\t\tposition='fixed'\n\t\t\t\tsx={{\n\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\tml: { sm: `${drawerWidth}px` },\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tsx={{ mr: 2, display: { sm: 'none' } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant='h6' noWrap component='div'>\n\t\t\t\t\t\tWeather Route\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Box\n\t\t\t\tcomponent='nav'\n\t\t\t\tsx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n\t\t\t\taria-label='mailbox folders'\n\t\t\t>\n\t\t\t\t<Drawer\n\t\t\t\t\tcontainer={undefined}\n\t\t\t\t\tvariant='temporary'\n\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\tModalProps={{\n\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t}}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'block', sm: 'none' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t\t<Drawer\n\t\t\t\t\tvariant='permanent'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'none', sm: 'block' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t</Box>\n\t\t</>\n\t)\n}\n","import React from 'react'\n\nimport { Box } from '@mui/system'\nimport {\n\tDirectionsRenderer,\n\tDirectionsService,\n\tGoogleMap,\n\tuseJsApiLoader,\n} from '@react-google-maps/api'\n\nexport type MapProps = {\n\tstart: string\n\tend: string\n}\n\nfunction Map(props: MapProps): React.ReactElement {\n\tconst { start, end } = props\n\n\t// Due to bug in react google maps api, this is needed to prevent infinite re-renders\n\tconst responseCount = React.useRef(0)\n\tconst [directions, setDirections] =\n\t\tReact.useState<google.maps.DirectionsResult | null>(null)\n\n\tconst { isLoaded } = useJsApiLoader({\n\t\tid: 'google-map-script',\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY ?? '',\n\t})\n\n\tconst directionsCallback = (\n\t\tresponse: google.maps.DirectionsResult | null\n\t): void => {\n\t\tif (response !== null && responseCount.current < 2) {\n\t\t\tresponseCount.current += 1\n\t\t\tsetDirections(response)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Box height='100%'>\n\t\t\t{isLoaded && (\n\t\t\t\t<GoogleMap\n\t\t\t\t\tmapContainerStyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DirectionsService\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\torigin: start,\n\t\t\t\t\t\t\tdestination: end,\n\t\t\t\t\t\t\ttravelMode: google.maps.TravelMode.DRIVING,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcallback={directionsCallback}\n\t\t\t\t\t/>\n\t\t\t\t\t{directions && (\n\t\t\t\t\t\t<DirectionsRenderer\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tdirections: directions,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</GoogleMap>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default React.memo(Map)\n","import React from 'react'\n\nimport Map from '../components/Map'\n\nfunction Home(): React.ReactElement {\n\treturn <Map start='logan, ut' end='ogden, ut' />\n}\n\nexport default React.memo(Home)\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Recent login required. Please sign out then sign back in to perform this action',\n\t'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n\t'auth/email-already-in-use': 'An account already exists with this email',\n}\n","import {\n\tcreateUserWithEmailAndPassword,\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from 'firebase/auth'\nimport { auth } from 'ts/services/auth'\nimport { User } from 'ts/utils/models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t\tlastSignIn:\n\t\t\t\t(user.metadata.lastSignInTime &&\n\t\t\t\t\tnew Date(user.metadata.lastSignInTime)) ||\n\t\t\t\tundefined,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   POST\n// --------------------------------------------------\n\nexport const signUp = (\n\temail: string,\n\tpassword: string,\n\tname?: string\n): Promise<void> =>\n\tcreateUserWithEmailAndPassword(auth, email, password).then(credential =>\n\t\tupdateProfile(credential.user, { displayName: name })\n\t)\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateProfile(auth.currentUser, { displayName: name })\n\t\t: Promise.reject()\n\nexport const updateEmail = (email: string): Promise<void> =>\n\tauth.currentUser ? updateFireEmail(auth.currentUser, email) : Promise.reject()\n\nexport const updatePassword = (password: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateFirePassword(auth.currentUser, password)\n\t\t: Promise.reject()\n","import { FormState } from 'ts/utils/models'\n\nexport function newFormState<FieldNames extends string>(\n\tfields: readonly FieldNames[]\n): FormState<FieldNames> {\n\tconst state: FormState<FieldNames> = {\n\t\tvalues: {} as Record<FieldNames, string>,\n\t\tmessages: {} as Record<FieldNames, string>,\n\t\tisValid: {} as Record<FieldNames, boolean>,\n\t\ttouched: {} as Record<FieldNames, boolean>,\n\t\tvalidators: {} as Record<\n\t\t\tFieldNames,\n\t\t\t(state: FormState<FieldNames>) => FormState<FieldNames>\n\t\t>,\n\t\tformValid: false,\n\t\tformMessage: '',\n\t\tattemptedSubmit: false,\n\t}\n\tfor (const field of fields) {\n\t\tstate.values[field] = ''\n\t\tstate.messages[field] = ''\n\t\tstate.isValid[field] = false\n\t\tstate.touched[field] = false\n\t\tstate.validators[field] = (): FormState<FieldNames> => state\n\t}\n\treturn state\n}\n\nexport function beforeSubmit<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tstate = validateForm(state)\n\tfor (const key in state.touched) state.touched[key] = true\n\tstate.attemptedSubmit = true\n\tif (!state.formValid) state.formMessage = 'Please fix the errors in the form'\n\treturn state\n}\n\nexport function validateForm<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tlet isValid = true\n\tfor (const key in state.validators) {\n\t\tstate = state.validators[key](state)\n\t\tif (!state.isValid[key]) isValid = false\n\t}\n\tstate.formValid = isValid\n\treturn state\n}\n\nexport function handleValueChange<FieldNames extends string>(\n\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tconst name = event.target.name as FieldNames\n\tconst value = event.target.value\n\n\tif (!state.isValid[name]) state = state.validators[name](state)\n\tconst fieldValues = state.values\n\tfieldValues[name] = value\n\treturn { ...state, values: fieldValues }\n}\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState, User } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'email'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (user: User): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalues: {\n\t\t\tname: user.name ?? '',\n\t\t\temail: user.email ?? '',\n\t\t},\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tname: nameValidator,\n\t\t},\n\t}\n}\n","import ProfileForm from './ProfileForm'\n\nexport default ProfileForm\n","import React, { useContext, useEffect } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState(user))\n\tconst [hasChanged, setHasChanged] = React.useState(false)\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsetHasChanged(\n\t\t\t\tuser.name !== formState.values.name ||\n\t\t\t\t\tuser.email !== formState.values.email\n\t\t\t),\n\t\t[formState]\n\t)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tPromise.all([\n\t\t\tuser.name !== formState.values.name\n\t\t\t\t? updateName(formState.values.name)\n\t\t\t\t: Promise.resolve(),\n\t\t\tuser.email !== formState.values.email\n\t\t\t\t? updateEmail(formState.values.email)\n\t\t\t\t: Promise.resolve(),\n\t\t])\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tdefaultValue={user.name}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Email'\n\t\t\t\ttype='email'\n\t\t\t\tname='email'\n\t\t\t\tdefaultValue={user.email}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, display: hasChanged ? 'default' : 'none' }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Save Changes'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ProfileForm from 'ts/forms/Profile'\n\nimport { Container, Typography } from '@mui/material'\n\nexport default function Profile(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Edit Profile</Typography>\n\t\t\t<ProfileForm />\n\t\t</Container>\n\t)\n}\n","import { collection, deleteDoc, doc, getDocs, setDoc } from 'firebase/firestore'\nimport { SavedRoute } from 'ts/utils/models'\n\nimport { database } from './firebase'\nimport { getUser } from './user'\n\ntype newSavedRouteParams = Omit<SavedRoute, 'id'>\n\nexport const newSavedRoute = (route: newSavedRouteParams): Promise<void> => {\n\tconst user = getUser()\n\tif (!user) return Promise.reject()\n\n\tconst userCollection = collection(database, user.id)\n\n\treturn setDoc(doc(userCollection), route)\n\t\t.then(() => Promise.resolve())\n\t\t.catch(() => Promise.reject())\n}\n\nexport const getSavedRoutes = (): Promise<SavedRoute[]> => {\n\tconst user = getUser()\n\tif (!user) return Promise.reject()\n\n\treturn getDocs(collection(database, user.id))\n\t\t.then(r => {\n\t\t\tconst routes: SavedRoute[] = []\n\t\t\tr.forEach(doc => routes.push({ ...doc.data(), id: doc.id } as SavedRoute))\n\t\t\treturn Promise.resolve(routes)\n\t\t})\n\t\t.catch(() => Promise.reject())\n}\n\nexport const deleteSavedRoute = (id: string): Promise<void> => {\n\tconst user = getUser()\n\tif (!user) return Promise.reject()\n\n\treturn deleteDoc(doc(collection(database, user.id), id))\n\t\t.then(() => Promise.resolve())\n\t\t.catch(() => Promise.reject())\n}\n","import React from 'react'\n\nimport {\n\tLink as RouterLink,\n\tLinkProps as RouterLinkProps,\n} from 'react-router-dom'\n\nimport { createTheme } from '@mui/material/styles'\n\n// Allow adapting MUI links to react-router-dom links\nconst LinkBehavior = React.forwardRef<\n\tany,\n\tOmit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n\tconst { href, ...other } = props\n\t// Map href (MUI) -> to (react-router)\n\treturn <RouterLink ref={ref} to={href} {...other} />\n})\n\nLinkBehavior.displayName = 'LinkBehavior'\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#2a8544',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#f50057',\n\t\t},\n\t},\n\tcomponents: {\n\t\tMuiLink: {\n\t\t\tdefaultProps: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tcomponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\tdefaultProps: {\n\t\t\t\tLinkComponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t},\n\ttypography: {\n\t\th1: {\n\t\t\tcolor: '#2a8544',\n\t\t\tfontSize: '2.5rem',\n\t\t\tfontWeight: '500',\n\t\t\tmarginTop: '1.5rem',\n\t\t},\n\t\th2: {\n\t\t\tcolor: '#2a8544',\n\t\t\tfontSize: '1.5rem',\n\t\t\tfontWeight: '500',\n\t\t\tmarginTop: '1.5rem',\n\t\t},\n\t},\n})\n\nexport default theme\n","import { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'start', 'end'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const startValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.start = state.values.start.length > 0\n\tstate.messages.start = state.isValid.start ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const endValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.end = state.values.end.length > 0\n\tstate.messages.end = state.isValid.end ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tname: nameValidator,\n\t\t\tstart: startValidator,\n\t\t\tend: endValidator,\n\t\t},\n\t}\n}\n","import React from 'react'\n\nimport { getMessage } from 'ts/services/errors'\nimport { newSavedRoute } from 'ts/services/savedRoutes'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport const NewSavedRouteFormId = 'new-saved-route-form'\n\ninterface NewSavedRouteFormProps {\n\tsetSubmitting: (submitting: boolean) => void\n\tsubmitCallback: () => void\n}\n\nexport default function NewSavedRouteForm(\n\tprops: NewSavedRouteFormProps\n): React.ReactElement {\n\tconst { setSubmitting, submitCallback } = props\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tnewSavedRoute({\n\t\t\tname: formState.values.name,\n\t\t\tbegin: {\n\t\t\t\tlat: parseInt(formState.values.start),\n\t\t\t\tlon: parseInt(formState.values.start),\n\t\t\t},\n\t\t\tend: {\n\t\t\t\tlat: parseInt(formState.values.end),\n\t\t\t\tlon: parseInt(formState.values.end),\n\t\t\t},\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tsubmitCallback()\n\t\t\t})\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tid={NewSavedRouteFormId}\n\t\t\tcomponent='form'\n\t\t\tonSubmit={handleSubmit}\n\t\t\tnoValidate\n\t\t>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Route Name'\n\t\t\t\tname='name'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Start Location'\n\t\t\t\tname='start'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.start = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.start && !formState.isValid.start}\n\t\t\t\thelperText={formState.touched.start && formState.messages.start}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='End Location'\n\t\t\t\tname='end'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.end = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.end && !formState.isValid.end}\n\t\t\t\thelperText={formState.touched.end && formState.messages.end}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n","import NewSavedRouteForm from './NewSavedRouteForm'\n\nexport default NewSavedRouteForm\n","import React from 'react'\n\nimport theme from 'theme'\nimport NewSavedRouteForm from 'ts/forms/NewSavedRoute'\nimport { NewSavedRouteFormId } from 'ts/forms/NewSavedRoute/NewSavedRouteForm'\n\nimport {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tuseMediaQuery,\n} from '@mui/material'\n\nexport interface NewRouteDialogProps {\n\topen: boolean\n\tonClose: () => void\n}\n\nexport default function NewRouteDialog(\n\tprops: NewRouteDialogProps\n): React.ReactElement {\n\tconst { open, onClose } = props\n\tconst fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\treturn (\n\t\t<Dialog fullScreen={fullScreen} open={open} fullWidth maxWidth='sm'>\n\t\t\t<DialogTitle>New Saved Route</DialogTitle>\n\t\t\t<DialogContent dividers>\n\t\t\t\t<NewSavedRouteForm\n\t\t\t\t\tsetSubmitting={setSubmitting}\n\t\t\t\t\tsubmitCallback={onClose}\n\t\t\t\t/>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions sx={{ pb: fullScreen ? 3 : 'default' }}>\n\t\t\t\t<Button onClick={onClose}>Cancel</Button>\n\t\t\t\t<Button\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tdisabled={submitting}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tform={NewSavedRouteFormId}\n\t\t\t\t>\n\t\t\t\t\t{submitting ? (\n\t\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t'Create Route'\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n","import React, { useState } from 'react'\n\nimport { deleteSavedRoute } from 'ts/services/savedRoutes'\nimport { SavedRoute } from 'ts/utils/models'\n\nimport {\n\tIcon,\n\tIconButton,\n\tListItem,\n\tListItemButton,\n\tListItemIcon,\n\tListItemText,\n\tMenu,\n\tMenuItem,\n} from '@mui/material'\n\nexport interface SavedRouteListItemProps {\n\troute: SavedRoute\n\tchangeCallback: () => void\n}\n\nexport default function SavedRouteListItem(\n\tprops: SavedRouteListItemProps\n): React.ReactElement {\n\tconst { route, changeCallback } = props\n\n\tconst [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n\tconst open = Boolean(anchorEl)\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n\t\tsetAnchorEl(event.currentTarget)\n\t}\n\tconst handleClose = (): void => {\n\t\tsetAnchorEl(null)\n\t}\n\n\tfunction handleDelete(): void {\n\t\tdeleteSavedRoute(route.id)\n\t\t\t.then(() => changeCallback())\n\t\t\t.catch(() => alert('Error deleting saved route'))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ListItem\n\t\t\t\tdisablePadding\n\t\t\t\tsecondaryAction={\n\t\t\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t\t\t<Icon>more_vert</Icon>\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<ListItemButton>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon>directions</Icon>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText\n\t\t\t\t\t\tprimary={route.name}\n\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{route.begin.lat}º, {route.begin.lon}º &rarr; {route.end.lat}º,{' '}\n\t\t\t\t\t\t\t\t{route.end.lon}º\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</ListItemButton>\n\t\t\t\t<Menu\n\t\t\t\t\tid='basic-menu'\n\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\topen={open}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t'aria-labelledby': 'basic-button',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem onClick={handleDelete}>Delete route</MenuItem>\n\t\t\t\t</Menu>\n\t\t\t</ListItem>\n\t\t</>\n\t)\n}\n","import SavedRoutes from './SavedRoutes'\n\nexport default SavedRoutes\n","import React, { useEffect } from 'react'\n\nimport { getSavedRoutes } from 'ts/services/savedRoutes'\nimport { SavedRoute } from 'ts/utils/models'\n\nimport {\n\tAlert,\n\tCircularProgress,\n\tContainer,\n\tFab,\n\tIcon,\n\tList,\n\tTypography,\n} from '@mui/material'\n\nimport NewRouteDialog from './NewRouteDialog'\nimport SavedRouteListItem from './SavedRouteListItem'\n\nexport default function SavedRoutes(): React.ReactElement {\n\tconst [savedRoutes, setSavedRoutes] = React.useState<SavedRoute[]>()\n\tconst [errorText, setErrorText] = React.useState<string>()\n\tconst [showDialog, setShowDialog] = React.useState(false)\n\tuseEffect(() => updateSavedRoutes(), [])\n\n\tconst updateSavedRoutes = (): void => {\n\t\tgetSavedRoutes()\n\t\t\t.then(r => setSavedRoutes(r))\n\t\t\t.catch(() => setErrorText('Error loading saved routes'))\n\t}\n\n\tconst renderRouteList = (): React.ReactElement => {\n\t\tif (!savedRoutes)\n\t\t\treturn <CircularProgress sx={{ display: 'block', mx: 'auto', mt: 3 }} />\n\n\t\tif (savedRoutes.length === 0)\n\t\t\treturn (\n\t\t\t\t<p>\n\t\t\t\t\tNo saved routes. Click the{' '}\n\t\t\t\t\t<Icon sx={{ fontSize: '1rem', fontWeight: 'bold' }}>add</Icon> icon to\n\t\t\t\t\tadd a new one.\n\t\t\t\t</p>\n\t\t\t)\n\n\t\treturn (\n\t\t\t<List>\n\t\t\t\t{savedRoutes.map(route => (\n\t\t\t\t\t<div key={route.id}>\n\t\t\t\t\t\t<SavedRouteListItem\n\t\t\t\t\t\t\troute={route}\n\t\t\t\t\t\t\tchangeCallback={updateSavedRoutes}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1' sx={{ mb: 2 }}>\n\t\t\t\tSaved Routes\n\t\t\t</Typography>\n\t\t\t<Fab\n\t\t\t\tcolor='primary'\n\t\t\t\tonClick={(): void => setShowDialog(true)}\n\t\t\t\tsx={{ position: 'fixed', bottom: '2rem', right: '1.5rem' }}\n\t\t\t>\n\t\t\t\t<Icon>add</Icon>\n\t\t\t</Fab>\n\t\t\t{errorText ? (\n\t\t\t\t<Alert severity='error'>{errorText}</Alert>\n\t\t\t) : (\n\t\t\t\trenderRouteList()\n\t\t\t)}\n\t\t\t<NewRouteDialog\n\t\t\t\topen={showDialog}\n\t\t\t\tonClose={(): void => {\n\t\t\t\t\tsetShowDialog(false), updateSavedRoutes()\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Container>\n\t)\n}\n","import { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 0\n\tstate.messages.password1 = state.isValid.password1 ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password1 === state.values.password2\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import ChangePasswordForm from './ChangePasswordForm'\n\nexport default ChangePasswordForm\n","import React, { useContext } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ChangePasswordForm(): React.ReactElement {\n\tconst { updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tupdatePassword(formState.values.password1)\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password1'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Confirm New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password2'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2 }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Change Password'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ChangePasswordForm from 'ts/forms/ChangePassword'\n\nimport { Container, Typography } from '@mui/material'\n\nexport default function Security(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Change Password</Typography>\n\t\t\t<ChangePasswordForm />\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport { Box } from '@mui/system'\n\ninterface InfoPieceProps {\n\tlabel: string\n\tchildren: React.ReactNode\n}\n\nexport default function InfoPiece(props: InfoPieceProps): React.ReactElement {\n\treturn (\n\t\t<Box sx={{ mt: 1 }}>\n\t\t\t<b>{props.label}</b>\n\t\t\t<br />\n\t\t\t{props.children}\n\t\t</Box>\n\t)\n}\n","import React, { useEffect } from 'react'\n\nimport InfoPiece from 'ts/components/InfoPiece'\nimport { getWeather } from 'ts/services/weather'\nimport { CurrentWeather } from 'ts/utils/models'\n\nimport { Alert, Container, LinearProgress, Typography } from '@mui/material'\n\nexport default function Weather(): React.ReactElement {\n\tconst [currentPosition, setCurrentPosition] = React.useState<\n\t\tGeolocationPosition | null | undefined\n\t>(undefined)\n\tconst [currentWeather, setCurrentWeather] = React.useState<CurrentWeather>()\n\tconst [errorText, setErrorText] = React.useState<string>()\n\n\tconst handleGetWeather = (): void => {\n\t\tcurrentPosition &&\n\t\t\tgetWeather(\n\t\t\t\tcurrentPosition.coords.latitude,\n\t\t\t\tcurrentPosition.coords.longitude\n\t\t\t)\n\t\t\t\t.then(r => setCurrentWeather(r.current))\n\t\t\t\t.catch(e => setErrorText(e.response.data.message))\n\t}\n\n\tuseEffect(() => {\n\t\tif (navigator.geolocation)\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\tlocation => setCurrentPosition(location),\n\t\t\t\terror => {\n\t\t\t\t\tswitch (error.code) {\n\t\t\t\t\t\tcase error.PERMISSION_DENIED:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText('Location request denied')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase error.POSITION_UNAVAILABLE:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText('Location information is unavailable')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase error.TIMEOUT:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText('Location request timed out')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText(\n\t\t\t\t\t\t\t\t'An unknown error occurred while getting the location'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\telse alert('Geolocation is not supported by this browser.')\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (currentPosition) handleGetWeather()\n\t}, [currentPosition])\n\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Weather</Typography>\n\n\t\t\t<p>Weather for current location</p>\n\n\t\t\t{!errorText && (!currentWeather || !currentPosition) && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant='overline'>\n\t\t\t\t\t\t{!currentPosition\n\t\t\t\t\t\t\t? 'Getting current location...'\n\t\t\t\t\t\t\t: 'Getting weather...'}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<LinearProgress />\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{errorText && <Alert severity='error'>{errorText}</Alert>}\n\n\t\t\t{currentWeather && (\n\t\t\t\t<div>\n\t\t\t\t\t<InfoPiece label='Temperature'>{currentWeather?.temp}ºF</InfoPiece>\n\t\t\t\t\t<InfoPiece label='Humidity'>{currentWeather?.humidity}%</InfoPiece>\n\t\t\t\t\t<InfoPiece label='Cloud Cover'>{currentWeather?.clouds}%</InfoPiece>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Container>\n\t)\n}\n","import get from 'axios'\nimport { Weather } from 'ts/utils/models'\n\nconst openWeatherMapApi = 'https://api.openweathermap.org/data/2.5'\n\nexport const getWeather = (lat: number, lon: number): Promise<Weather> =>\n\tget(`${openWeatherMapApi}/onecall`, {\n\t\tparams: {\n\t\t\tlat: lat,\n\t\t\tlon: lon,\n\t\t\tappid: process.env.REACT_APP_OPEN_WEATHER_MAP,\n\t\t\tunits: 'imperial',\n\t\t},\n\t}).then(r => r.data)\n","import React, { Context, useState } from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Navigation from 'ts/components/Navigation'\nimport Home from 'ts/containers/Home'\nimport Profile from 'ts/containers/Profile'\nimport SavedRoutes from 'ts/containers/SavedRoutes'\nimport Security from 'ts/containers/Security'\nimport Weather from 'ts/containers/Weather'\nimport { getUser } from 'ts/services/user'\nimport { drawerWidth } from 'ts/utils/constants'\nimport { User } from 'ts/utils/models'\nimport Paths from 'ts/utils/paths'\n\nimport { Box, Stack, Toolbar } from '@mui/material'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<Box sx={{ display: 'flex', height: '100vh' }}>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='main'\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Stack height='100%'>\n\t\t\t\t\t\t\t<Toolbar />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path={Paths.home} component={Home} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.savedRoutes} component={SavedRoutes} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.weather} component={Weather} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.profile} component={Profile} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.security} component={Security} />\n\n\t\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t\t\t<Redirect to={Paths.home} />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Box>\n\t\t\t\t</HashRouter>\n\t\t\t</Box>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['email', 'password'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const passwordValidator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password = state.values.password.length > 0\n\tstate.messages.password = state.isValid.password ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tpassword: passwordValidator,\n\t\t},\n\t}\n}\n","import SignInForm from './SignInForm'\n\nexport default SignInForm\n","import React from 'react'\n\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport {\n\tAlert,\n\tBox,\n\tButton,\n\tCircularProgress,\n\tLink,\n\tTextField,\n} from '@mui/material'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignInForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignIn(formState.values.email, formState.values.password)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\ttype='email'\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password'\n\t\t\t\tautoComplete='current-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password && !formState.isValid.password}\n\t\t\t\thelperText={formState.touched.password && formState.messages.password}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, mb: 2 }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign In'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signUp} variant='body2'>\n\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignInForm from 'ts/forms/SignIn'\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport { Avatar, Box, Container, Typography } from '@mui/material'\n\nexport default function SignIn(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<SignInForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'email', 'password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 4\n\tstate.messages.password1 = state.isValid.password1\n\t\t? ''\n\t\t: 'Must be at least 5 characters long'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password2 === state.values.password1\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tname: nameValidator,\n\t\t\temail: emailValidator,\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import SignUpForm from './SignUpForm'\n\nexport default SignUpForm\n","import * as React from 'react'\n\nimport { getMessage } from 'ts/services/errors'\nimport { signUp } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport { Alert, CircularProgress, Link } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignUpForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignUp(\n\t\t\tformState.values.email,\n\t\t\tformState.values.password1,\n\t\t\tformState.values.name\n\t\t)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='name'\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tautoComplete='name'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\ttype='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password1'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password1'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password2'\n\t\t\t\tlabel='Confirm Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password2'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, mb: 2 }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign Up'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signIn} variant='body2'>\n\t\t\t\t{'Already have an account? Sign In'}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignUpForm from 'ts/forms/SignUp'\n\nimport PersonIcon from '@mui/icons-material/Person'\nimport { Container } from '@mui/material'\nimport Avatar from '@mui/material/Avatar'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\n\nexport default function SignUp(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<PersonIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign Up\n\t\t\t\t</Typography>\n\t\t\t\t<SignUpForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/components/SignIn'\nimport SignUp from 'ts/components/SignUp'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\t\t\t\t\t<Route exact path={Paths.signUp} component={SignUp} />\n\n\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = (): void => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = (): void => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister(): void {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import 'sass/index.scss'\nimport 'sass/App.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from 'App'\nimport AppUnauthorized from 'AppUnauthorized'\nimport theme from 'theme'\nimport { auth } from 'ts/services/auth'\nimport { formatUser } from 'ts/services/user'\n\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser)\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<App user={user} />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<AppUnauthorized />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}