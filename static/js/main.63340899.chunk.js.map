{"version":3,"sources":["ts/services/firebase.ts","ts/services/auth.ts","ts/utils/constants.ts","ts/utils/paths.ts","ts/components/Navigation.tsx","ts/containers/Home.tsx","ts/containers/Presets.tsx","ts/services/errors.ts","ts/services/user.ts","ts/utils/helpers.ts","ts/forms/Profile/validation.ts","ts/forms/Profile/index.ts","ts/forms/Profile/ProfileForm.tsx","ts/containers/Profile.tsx","ts/forms/ChangePassword/validation.ts","ts/forms/ChangePassword/index.ts","ts/forms/ChangePassword/ChangePasswordForm.tsx","ts/containers/Security.tsx","App.tsx","ts/forms/SignIn/validation.ts","ts/forms/SignIn/index.ts","ts/forms/SignIn/SignInForm.tsx","ts/components/SignIn.tsx","ts/forms/SignUp/validation.ts","ts/forms/SignUp/index.ts","ts/forms/SignUp/SignUpForm.tsx","ts/components/SignUp.tsx","AppUnauthorized.tsx","theme.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","signOut","fireSignOut","EMAIL_REGEX","drawerWidth","Paths","home","presets","profile","security","signIn","signUp","Navigation","React","mobileOpen","setMobileOpen","handleDrawerToggle","drawer","Toolbar","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","onClick","AppBar","position","sx","width","sm","ml","IconButton","color","aria-label","edge","mr","display","Typography","variant","noWrap","Box","flexShrink","Drawer","container","undefined","open","onClose","ModalProps","keepMounted","xs","boxSizing","Home","isLoaded","useJsApiLoader","id","googleMapsApiKey","process","height","mapContainerStyle","center","lat","lng","zoom","memo","Presets","Container","ModelName","getMessage","e","message","ErrorMessages","code","replace","formatUser","user","uid","name","displayName","email","phone","phoneNumber","lastSignIn","metadata","lastSignInTime","Date","newFormState","fields","state","values","messages","isValid","touched","validators","formValid","formMessage","attemptedSubmit","field","beforeSubmit","key","validateForm","handleValueChange","event","target","value","fieldValues","fieldsArray","emailValidator","match","nameValidator","length","ProfileForm","useContext","UserContext","updateUser","useState","submitting","setSubmitting","getInitialFormState","formState","setFormState","hasChanged","setHasChanged","useEffect","onSubmit","preventDefault","Promise","all","currentUser","updateProfile","reject","resolve","updateFireEmail","then","catch","finally","noValidate","TextField","fullWidth","label","defaultValue","margin","onChange","onBlur","error","helperText","type","Alert","mt","severity","Button","CircularProgress","size","Profile","password1Validator","password1","password2Validator","password2","ChangePasswordForm","password","updateFirePassword","Security","ChangePassword","App","props","setUser","newUser","createContext","Provider","basename","flexGrow","Stack","exact","path","passwordValidator","SignInForm","signInWithEmailAndPassword","required","autoComplete","autoFocus","mb","href","SignIn","flexDirection","alignItems","Avatar","m","bgcolor","SignUpForm","createUserWithEmailAndPassword","credential","SignUp","AppUnauthorized","className","push","LinkBehavior","forwardRef","ref","other","theme","createTheme","palette","main","secondary","components","MuiLink","defaultProps","MuiButtonBase","LinkComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.63340899.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyCyk-8pQIXG4EJOyRa3QT0yzUfr661yuyI',\n\tauthDomain: 'weather-route-e1a9c.firebaseapp.com',\n\tprojectId: 'weather-route-e1a9c',\n\tstorageBucket: 'weather-route-e1a9c.appspot.com',\n\tmessagingSenderId: '184699653844',\n\tappId: '1:184699653844:web:74997c51e6e4b49ed83541',\n}\n\n// Initialize Firebase\nexport const firebaseApp = initializeApp(firebaseConfig)\n// export const database = getDatabase(firebaseApp)\n","import {\n\tgetAuth,\n\tsignInWithEmailAndPassword,\n\tsignOut as fireSignOut,\n} from 'firebase/auth'\nimport { firebaseApp } from 'ts/services/firebase'\n\nexport const auth = getAuth(firebaseApp)\n\nexport const signIn = (email: string, password: string): Promise<void> =>\n\tsignInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n\nexport const signOut = (): Promise<void> => fireSignOut(auth)\n","export const EMAIL_REGEX =\n\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const drawerWidth = 240\n","const Paths = {\n\thome: '/home',\n\tpresets: '/presets',\n\tprofile: '/profile',\n\tsecurity: '/security',\n\tsignIn: '/signin',\n\tsignUp: '/signup',\n}\n\nexport default Paths\n","import * as React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { signOut } from 'ts/services/auth'\nimport { drawerWidth } from 'ts/utils/constants'\nimport Paths from 'ts/utils/paths'\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Divider from '@mui/material/Divider'\nimport Drawer from '@mui/material/Drawer'\nimport IconButton from '@mui/material/IconButton'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\n\nexport default function Navigation(): React.ReactElement {\n\tconst [mobileOpen, setMobileOpen] = React.useState(false)\n\n\tconst handleDrawerToggle = (): void => {\n\t\tsetMobileOpen(!mobileOpen)\n\t}\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<Toolbar />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button component={Link} to={Paths.home}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Home' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button component={Link} to={Paths.presets}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Presets' />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button component={Link} to={Paths.profile}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Profile' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button component={Link} to={Paths.security}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Security' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button onClick={signOut}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Sign Out' />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar\n\t\t\t\tposition='fixed'\n\t\t\t\tsx={{\n\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\tml: { sm: `${drawerWidth}px` },\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tsx={{ mr: 2, display: { sm: 'none' } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant='h6' noWrap component='div'>\n\t\t\t\t\t\tWeather Route\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Box\n\t\t\t\tcomponent='nav'\n\t\t\t\tsx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n\t\t\t\taria-label='mailbox folders'\n\t\t\t>\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n\t\t\t\t<Drawer\n\t\t\t\t\tcontainer={undefined}\n\t\t\t\t\tvariant='temporary'\n\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\tModalProps={{\n\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t}}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'block', sm: 'none' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t\t<Drawer\n\t\t\t\t\tvariant='permanent'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'none', sm: 'block' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t</Box>\n\t\t</>\n\t)\n\n\t// <Paper elevation={3} sx={{ pb: 2 }}>\n\t// \t<BottomNavigation\n\t// \t\tshowLabels\n\t// \t\tvalue={value}\n\t// \t\tonChange={(_event, newValue): void => {\n\t// \t\t\tsetValue(newValue)\n\t// \t\t}}\n\t// \t>\n\t// \t\t<BottomNavigationAction\n\t// \t\t\tcomponent={Link}\n\t// \t\t\tto={Paths.home}\n\t// \t\t\tvalue={Paths.home}\n\t// \t\t\tlabel='Home'\n\t// \t\t\ticon={<HomeIcon />}\n\t// \t\t/>\n\t// \t\t<BottomNavigationAction\n\t// \t\t\tcomponent={Link}\n\t// \t\t\tto={Paths.map}\n\t// \t\t\tvalue={Paths.map}\n\t// \t\t\tlabel='Presets'\n\t// \t\t\ticon={<StarIcon />}\n\t// \t\t/>\n\t// \t\t<BottomNavigationAction\n\t// \t\t\tcomponent={Link}\n\t// \t\t\tto={Paths.account}\n\t// \t\t\tvalue={Paths.account}\n\t// \t\t\tlabel='Account'\n\t// \t\t\ticon={<AccountCircleIcon />}\n\t// \t\t/>\n\t// \t</BottomNavigation>\n\t// </Paper>\n\t// )\n}\n","import React from 'react'\n\nimport { Box } from '@mui/system'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'\n\nfunction Home(): React.ReactElement {\n\tconst { isLoaded } = useJsApiLoader({\n\t\tid: 'google-map-script',\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY ?? '',\n\t})\n\n\treturn (\n\t\t<Box height='100%'>\n\t\t\t{isLoaded && (\n\t\t\t\t<GoogleMap\n\t\t\t\t\tmapContainerStyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t}}\n\t\t\t\t\tcenter={{\n\t\t\t\t\t\tlat: -3.745,\n\t\t\t\t\t\tlng: -38.523,\n\t\t\t\t\t}}\n\t\t\t\t\tzoom={10}\n\t\t\t\t>\n\t\t\t\t\t{/* Child components, such as markers, info windows, etc. */}\n\t\t\t\t\t<></>\n\t\t\t\t</GoogleMap>\n\t\t\t)}\n\t\t</Box>\n\t)\n}\n\nexport default React.memo(Home)\n","import React from 'react'\n\nimport { Container } from '@mui/material'\n\nexport default function Presets(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Presets</h1>\n\t\t\t<p>This is the page for saving favorite routes to quickly reuse.</p>\n\t\t</Container>\n\t)\n}\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Recent login required. Please sign out then sign back in to perform this action',\n\t'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n\t'auth/email-already-in-use': 'An account already exists with this email',\n}\n","import {\n\tcreateUserWithEmailAndPassword,\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from 'firebase/auth'\nimport { auth } from 'ts/services/auth'\nimport { User } from 'ts/services/models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t\tlastSignIn:\n\t\t\t\t(user.metadata.lastSignInTime &&\n\t\t\t\t\tnew Date(user.metadata.lastSignInTime)) ||\n\t\t\t\tundefined,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   POST\n// --------------------------------------------------\n\nexport const signUp = (\n\temail: string,\n\tpassword: string,\n\tname?: string\n): Promise<void> =>\n\tcreateUserWithEmailAndPassword(auth, email, password).then(credential =>\n\t\tupdateProfile(credential.user, { displayName: name })\n\t)\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateProfile(auth.currentUser, { displayName: name })\n\t\t: Promise.reject()\n\nexport const updateEmail = (email: string): Promise<void> =>\n\tauth.currentUser ? updateFireEmail(auth.currentUser, email) : Promise.reject()\n\nexport const updatePassword = (password: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateFirePassword(auth.currentUser, password)\n\t\t: Promise.reject()\n","import { FormState } from 'ts/services/models'\n\nexport function newFormState<FieldNames extends string>(\n\tfields: readonly FieldNames[]\n): FormState<FieldNames> {\n\tconst state: FormState<FieldNames> = {\n\t\tvalues: {} as Record<FieldNames, string>,\n\t\tmessages: {} as Record<FieldNames, string>,\n\t\tisValid: {} as Record<FieldNames, boolean>,\n\t\ttouched: {} as Record<FieldNames, boolean>,\n\t\tvalidators: {} as Record<\n\t\t\tFieldNames,\n\t\t\t(state: FormState<FieldNames>) => FormState<FieldNames>\n\t\t>,\n\t\tformValid: false,\n\t\tformMessage: '',\n\t\tattemptedSubmit: false,\n\t}\n\tfor (const field of fields) {\n\t\tstate.values[field] = ''\n\t\tstate.messages[field] = ''\n\t\tstate.isValid[field] = false\n\t\tstate.touched[field] = false\n\t\tstate.validators[field] = (): FormState<FieldNames> => state\n\t}\n\treturn state\n}\n\nexport function beforeSubmit<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tstate = validateForm(state)\n\tfor (const key in state.touched) state.touched[key] = true\n\tstate.attemptedSubmit = true\n\tif (!state.formValid) state.formMessage = 'Please fix the errors in the form'\n\treturn state\n}\n\nexport function validateForm<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tlet isValid = true\n\tfor (const key in state.validators) {\n\t\tstate = state.validators[key](state)\n\t\tif (!state.isValid[key]) isValid = false\n\t}\n\tstate.formValid = isValid\n\treturn state\n}\n\nexport function handleValueChange<FieldNames extends string>(\n\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tconst name = event.target.name as FieldNames\n\tconst value = event.target.value\n\n\tif (!state.isValid[name]) state = state.validators[name](state)\n\tconst fieldValues = state.values\n\tfieldValues[name] = value\n\treturn { ...state, values: fieldValues }\n}\n","import { FormState, User } from 'ts/services/models'\nimport { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\n\nconst fieldsArray = ['name', 'email'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (user: User): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalues: {\n\t\t\tname: user.name ?? '',\n\t\t\temail: user.email ?? '',\n\t\t},\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tname: nameValidator,\n\t\t},\n\t}\n}\n","import ProfileForm from './ProfileForm'\n\nexport default ProfileForm\n","import React, { useContext, useEffect } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState(user))\n\tconst [hasChanged, setHasChanged] = React.useState(false)\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsetHasChanged(\n\t\t\t\tuser.name !== formState.values.name ||\n\t\t\t\t\tuser.email !== formState.values.email\n\t\t\t),\n\t\t[formState]\n\t)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tPromise.all([\n\t\t\tuser.name !== formState.values.name\n\t\t\t\t? updateName(formState.values.name)\n\t\t\t\t: Promise.resolve(),\n\t\t\tuser.email !== formState.values.email\n\t\t\t\t? updateEmail(formState.values.email)\n\t\t\t\t: Promise.resolve(),\n\t\t])\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tdefaultValue={user.name}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Email'\n\t\t\t\ttype='email'\n\t\t\t\tname='email'\n\t\t\t\tdefaultValue={user.email}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, display: hasChanged ? 'default' : 'none' }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Save Changes'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ProfileForm from 'ts/forms/Profile'\n\nimport { Container } from '@mui/material'\n\nexport default function Profile(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Edit Profile</h1>\n\t\t\t<ProfileForm />\n\t\t</Container>\n\t)\n}\n","import { FormState } from 'ts/services/models'\nimport { newFormState } from 'ts/utils/helpers'\n\nconst fieldsArray = ['password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 0\n\tstate.messages.password1 = state.isValid.password1 ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password1 === state.values.password2\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import ChangePasswordForm from './ChangePasswordForm'\n\nexport default ChangePasswordForm\n","import React, { useContext } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ChangePasswordForm(): React.ReactElement {\n\tconst { updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tupdatePassword(formState.values.password1)\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password1'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Confirm New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password2'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button type='submit' fullWidth variant='contained' sx={{ mt: 2 }}>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Change Password'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ChangePasswordForm from 'ts/forms/ChangePassword'\n\nimport { Container } from '@mui/material'\n\nexport default function Security(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Change Password</h1>\n\t\t\t<ChangePasswordForm />\n\t\t</Container>\n\t)\n}\n","import React, { Context, useState } from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Navigation from 'ts/components/Navigation'\nimport Home from 'ts/containers/Home'\nimport Presets from 'ts/containers/Presets'\nimport Profile from 'ts/containers/Profile'\nimport Security from 'ts/containers/Security'\nimport { User } from 'ts/services/models'\nimport { getUser } from 'ts/services/user'\nimport { drawerWidth } from 'ts/utils/constants'\nimport Paths from 'ts/utils/paths'\n\nimport { Box, Stack, Toolbar } from '@mui/material'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<Box sx={{ display: 'flex', height: '100vh' }}>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='main'\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Stack height='100%'>\n\t\t\t\t\t\t\t<Toolbar />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path={Paths.home} component={Home} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.presets} component={Presets} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.profile} component={Profile} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.security} component={Security} />\n\n\t\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t\t\t<Redirect to={Paths.home} />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Box>\n\t\t\t\t</HashRouter>\n\t\t\t</Box>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import { FormState } from 'ts/services/models'\nimport { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\n\nconst fieldsArray = ['email', 'password'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const passwordValidator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password = state.values.password.length > 0\n\tstate.messages.password = state.isValid.password ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tpassword: passwordValidator,\n\t\t},\n\t}\n}\n","import SignInForm from './SignInForm'\n\nexport default SignInForm\n","import React from 'react'\n\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport {\n\tAlert,\n\tBox,\n\tButton,\n\tCircularProgress,\n\tLink,\n\tTextField,\n} from '@mui/material'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignInForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignIn(formState.values.email, formState.values.password)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\ttype='email'\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password'\n\t\t\t\tautoComplete='current-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password && !formState.isValid.password}\n\t\t\t\thelperText={formState.touched.password && formState.messages.password}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button type='submit' fullWidth variant='contained' sx={{ mt: 2, mb: 2 }}>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign In'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signUp} variant='body2'>\n\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignInForm from 'ts/forms/SignIn'\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport { Avatar, Box, Container, Typography } from '@mui/material'\n\nexport default function SignIn(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<SignInForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import { FormState } from 'ts/services/models'\nimport { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\n\nconst fieldsArray = ['name', 'email', 'password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 4\n\tstate.messages.password1 = state.isValid.password1\n\t\t? ''\n\t\t: 'Must be at least 5 characters long'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password2 === state.values.password1\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tname: nameValidator,\n\t\t\temail: emailValidator,\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import SignUpForm from './SignUpForm'\n\nexport default SignUpForm\n","import * as React from 'react'\n\nimport { getMessage } from 'ts/services/errors'\nimport { signUp } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport { Alert, CircularProgress, Link } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignUpForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignUp(\n\t\t\tformState.values.email,\n\t\t\tformState.values.password1,\n\t\t\tformState.values.name\n\t\t)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='name'\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tautoComplete='name'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\ttype='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password1'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password1'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password2'\n\t\t\t\tlabel='Confirm Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password2'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button type='submit' fullWidth variant='contained' sx={{ mt: 2, mb: 2 }}>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign Up'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signIn} variant='body2'>\n\t\t\t\t{'Already have an account? Sign In'}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignUpForm from 'ts/forms/SignUp'\n\nimport PersonIcon from '@mui/icons-material/Person'\nimport { Container } from '@mui/material'\nimport Avatar from '@mui/material/Avatar'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\n\nexport default function SignUp(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<PersonIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign Up\n\t\t\t\t</Typography>\n\t\t\t\t<SignUpForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/components/SignIn'\nimport SignUp from 'ts/components/SignUp'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\t\t\t\t\t<Route exact path={Paths.signUp} component={SignUp} />\n\n\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import React from 'react'\n\nimport {\n\tLink as RouterLink,\n\tLinkProps as RouterLinkProps,\n} from 'react-router-dom'\n\nimport { createTheme } from '@mui/material/styles'\n\n// Allow adapting MUI links to react-router-dom links\nconst LinkBehavior = React.forwardRef<\n\tany,\n\tOmit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n\tconst { href, ...other } = props\n\t// Map href (MUI) -> to (react-router)\n\treturn <RouterLink ref={ref} to={href} {...other} />\n})\n\nLinkBehavior.displayName = 'LinkBehavior'\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#2a8544',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#f50057',\n\t\t},\n\t},\n\tcomponents: {\n\t\tMuiLink: {\n\t\t\tdefaultProps: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tcomponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\tdefaultProps: {\n\t\t\t\tLinkComponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t},\n})\n\nexport default theme\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = (): void => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = (): void => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister(): void {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import 'sass/index.scss'\nimport 'sass/App.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from 'App'\nimport AppUnauthorized from 'AppUnauthorized'\nimport theme from 'theme'\nimport { auth } from 'ts/services/auth'\nimport { formatUser } from 'ts/services/user'\n\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser)\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<App user={user} />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<AppUnauthorized />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}