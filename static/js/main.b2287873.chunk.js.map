{"version":3,"sources":["ts/services/firebase.ts","ts/services/auth.ts","ts/utils/constants.ts","ts/utils/paths.ts","ts/components/Navigation.tsx","ts/components/InfoPiece.tsx","ts/components/Map.tsx","ts/services/user.ts","ts/utils/helpers.ts","ts/services/weather.ts","ts/containers/DisplayRoute/displayRouteHelpers.ts","ts/containers/DisplayRoute/RouteWeather.tsx","ts/containers/DisplayRoute/index.ts","ts/containers/DisplayRoute/DisplayRoute.tsx","ts/services/savedRoutes.ts","ts/containers/Home.tsx","ts/services/errors.ts","ts/forms/Profile/validation.ts","ts/forms/Profile/index.ts","ts/forms/Profile/ProfileForm.tsx","ts/containers/Profile.tsx","theme.tsx","ts/forms/NewSavedRoute/validation.ts","ts/forms/NewSavedRoute/NewSavedRouteForm.tsx","ts/forms/NewSavedRoute/index.ts","ts/containers/SavedRoutes/NewRouteDialog.tsx","ts/containers/SavedRoutes/SavedRouteListItem.tsx","ts/containers/SavedRoutes/index.ts","ts/containers/SavedRoutes/SavedRoutes.tsx","ts/forms/ChangePassword/validation.ts","ts/forms/ChangePassword/index.ts","App.tsx","ts/forms/ChangePassword/ChangePasswordForm.tsx","ts/containers/Security.tsx","ts/containers/Weather.tsx","ts/forms/SignIn/validation.ts","ts/forms/SignIn/index.ts","ts/forms/SignIn/SignInForm.tsx","ts/components/SignIn.tsx","ts/forms/SignUp/validation.ts","ts/forms/SignUp/index.ts","ts/forms/SignUp/SignUpForm.tsx","ts/components/SignUp.tsx","AppUnauthorized.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","getFirestore","auth","getAuth","signOut","fireSignOut","EMAIL_REGEX","drawerWidth","Paths","home","savedRoutes","getDisplayRouteLink","id","displayRoute","weather","profile","security","signIn","signUp","Navigation","React","mobileOpen","setMobileOpen","handleDrawerToggle","mainMenuOptions","title","url","icon","profileMenuOptions","drawer","Toolbar","Divider","List","onClick","map","option","ListItem","button","component","Link","to","ListItemIcon","Icon","ListItemText","primary","location","reload","AppBar","position","sx","width","sm","ml","IconButton","color","aria-label","edge","mr","display","Typography","variant","noWrap","marginLeft","Box","flexShrink","Drawer","container","undefined","open","onClose","ModalProps","keepMounted","xs","boxSizing","InfoPiece","props","mt","label","children","MapCanvas","forwardRef","ref","style","height","Map","directionsQuery","beginEndCallback","useState","mapContainer","setMapContainer","mapRef","useCallback","node","googleMapsAPIKey","process","options","zoom","fullscreenControl","streetViewControl","zoomControl","mapTypeControl","onLoad","setZoom","PlotRoute","legCallback","findAndRenderRoute","useDirections","renderOnMap","renderOptions","useEffect","start","end","origin","destination","travelMode","google","maps","TravelMode","DRIVING","then","r","leg","routes","legs","beginLocation","lat","start_location","lon","lng","endLocation","end_location","beginAddress","start_address","endAddress","end_address","catch","e","console","error","displayName","memo","formatUser","user","uid","name","email","phone","phoneNumber","lastSignIn","metadata","lastSignInTime","Date","getUser","currentUser","round","num","decimals","Math","pow","formatTime","dateTime","hours","getHours","minutes","getMinutes","ampm","stripUSA","address","replace","newFormState","fields","state","values","messages","isValid","touched","validators","formValid","formMessage","attemptedSubmit","field","beforeSubmit","key","validateForm","handleValueChange","event","target","value","fieldValues","getWeather","get","params","appid","units","data","timePoints","updateLoading","a","timePointWeather","timePoint","p","length","point","hour","time","push","hourly","RouteWeather","weatherLoadProgress","setWeatherLoadProgress","setTimePointWeather","getTimePointWeather","maxPoints","interval","min","reducedTimePoints","targetTime","index","findIndex","t1","t2","selectedTimePoint","abs","reduceTimePoints","timeAccumulator","steps","step","duration","getTimePoints","arr","TableContainer","Paper","maxWidth","overflow","Table","TableHead","TableRow","TableCell","TableBody","i","border","secondsOffset","getTime","temp","pop","clouds","LinearProgress","DisplayRoute","urlParams","useParams","route","setRoute","setLeg","getDoc","doc","Promise","resolve","reject","getSavedRoute","Container","text","distance","mb","pb","textAlign","CircularProgress","Home","ModelName","getMessage","message","ErrorMessages","code","fieldsArray","emailValidator","match","nameValidator","ProfileForm","useContext","UserContext","updateUser","submitting","setSubmitting","getInitialFormState","formState","setFormState","hasChanged","setHasChanged","onSubmit","preventDefault","all","updateProfile","updateFireEmail","finally","noValidate","TextField","fullWidth","defaultValue","margin","onChange","onBlur","helperText","type","Alert","severity","Button","disabled","size","Profile","LinkBehavior","href","other","theme","createTheme","palette","main","secondary","components","MuiLink","defaultProps","MuiButtonBase","LinkComponent","typography","h1","fontSize","fontWeight","marginTop","h2","startValidator","endValidator","NewSavedRouteFormId","NewSavedRouteForm","submitCallback","setDirectionsQuery","beginEndResult","setBeginEndResult","updateWaypoints","Stack","gap","userCollection","collection","setDoc","newSavedRoute","beginEnd","NewRouteDialog","fullScreen","useMediaQuery","breakpoints","down","Dialog","scroll","DialogTitle","DialogContent","dividers","NewSavedRoute","DialogActions","form","SavedRouteListItem","changeCallback","anchorEl","setAnchorEl","Boolean","disablePadding","secondaryAction","currentTarget","ListItemButton","MenuListProps","MenuItem","deleteDoc","deleteSavedRoute","alert","SavedRoutes","setSavedRoutes","errorText","setErrorText","showDialog","setShowDialog","updateSavedRoutes","getDocs","forEach","getSavedRoutes","Fab","bottom","right","zIndex","sort","b","mx","password1Validator","password1","password2Validator","password2","ChangePasswordForm","password","updateFirePassword","Security","ChangePassword","Weather","currentPosition","setCurrentPosition","currentWeather","setCurrentWeather","navigator","geolocation","getCurrentPosition","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","coords","latitude","longitude","current","response","humidity","App","setUser","newUser","createContext","Provider","basename","flexGrow","exact","path","passwordValidator","SignInForm","signInWithEmailAndPassword","required","autoComplete","autoFocus","SignIn","flexDirection","alignItems","Avatar","m","bgcolor","SignUpForm","createUserWithEmailAndPassword","credential","SignUp","AppUnauthorized","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","hostname","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2287873.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getFirestore } from 'firebase/firestore'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyCyk-8pQIXG4EJOyRa3QT0yzUfr661yuyI',\n\tauthDomain: 'weather-route-e1a9c.firebaseapp.com',\n\tprojectId: 'weather-route-e1a9c',\n\tstorageBucket: 'weather-route-e1a9c.appspot.com',\n\tmessagingSenderId: '184699653844',\n\tappId: '1:184699653844:web:74997c51e6e4b49ed83541',\n}\n\n// Initialize Firebase\nexport const firebaseApp = initializeApp(firebaseConfig)\nexport const database = getFirestore()\n","import {\n\tgetAuth,\n\tsignInWithEmailAndPassword,\n\tsignOut as fireSignOut,\n} from 'firebase/auth'\nimport { firebaseApp } from 'ts/services/firebase'\n\nexport const auth = getAuth(firebaseApp)\n\nexport const signIn = (email: string, password: string): Promise<void> =>\n\tsignInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n\nexport const signOut = (): Promise<void> => fireSignOut(auth)\n","export const EMAIL_REGEX =\n\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const drawerWidth = 240\n","const Paths = {\n\thome: '/home',\n\tsavedRoutes: '/saved-routes',\n\tgetDisplayRouteLink: (id: string): string => `/display-route/${id}`,\n\tdisplayRoute: '/display-route/:id',\n\tweather: '/weather',\n\tprofile: '/profile',\n\tsecurity: '/security',\n\tsignIn: '/signin',\n\tsignUp: '/signup',\n}\n\nexport default Paths\n","import * as React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { signOut } from 'ts/services/auth'\nimport { drawerWidth } from 'ts/utils/constants'\nimport Paths from 'ts/utils/paths'\n\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { Icon } from '@mui/material'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Divider from '@mui/material/Divider'\nimport Drawer from '@mui/material/Drawer'\nimport IconButton from '@mui/material/IconButton'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\n\nexport default function Navigation(): React.ReactElement {\n\tconst [mobileOpen, setMobileOpen] = React.useState(false)\n\n\tconst handleDrawerToggle = (): void => {\n\t\tsetMobileOpen(!mobileOpen)\n\t}\n\n\ttype menuOptions = Array<{\n\t\ttitle: string\n\t\turl: string\n\t\ticon: string\n\t}>\n\n\tconst mainMenuOptions: menuOptions = [\n\t\t{ title: 'Home', url: Paths.home, icon: 'home' },\n\t\t{ title: 'Saved Routes', url: Paths.savedRoutes, icon: 'star' },\n\t\t{ title: 'Weather', url: Paths.weather, icon: 'wb_sunny' },\n\t]\n\n\tconst profileMenuOptions: menuOptions = [\n\t\t{ title: 'Profile', url: Paths.profile, icon: 'account_circle' },\n\t\t{ title: 'Security', url: Paths.security, icon: 'lock' },\n\t]\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<Toolbar />\n\t\t\t<Divider />\n\t\t\t<List onClick={handleDrawerToggle}>\n\t\t\t\t{mainMenuOptions.map(option => (\n\t\t\t\t\t<ListItem button component={Link} to={option.url} key={option.title}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Icon>{option.icon}</Icon>\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={option.title} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List onClick={handleDrawerToggle}>\n\t\t\t\t{profileMenuOptions.map(option => (\n\t\t\t\t\t<ListItem button component={Link} to={option.url} key={option.title}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Icon>{option.icon}</Icon>\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={option.title} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t\t<ListItem button onClick={(): void => location.reload()}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon>refresh</Icon>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Refresh' />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button onClick={signOut}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon>logout</Icon>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary='Sign Out' />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar\n\t\t\t\tposition='fixed'\n\t\t\t\tsx={{\n\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\tml: { sm: `${drawerWidth}px` },\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tsx={{ mr: 2, display: { sm: 'none' } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant='h6' noWrap component='div'>\n\t\t\t\t\t\tWeather Route\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\tonClick={(): void => location.reload()}\n\t\t\t\t\t\tsx={{ marginLeft: 'auto' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon>map</Icon>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Box\n\t\t\t\tcomponent='nav'\n\t\t\t\tsx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n\t\t\t\taria-label='mailbox folders'\n\t\t\t>\n\t\t\t\t<Drawer\n\t\t\t\t\tcontainer={undefined}\n\t\t\t\t\tvariant='temporary'\n\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\tModalProps={{\n\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t}}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'block', sm: 'none' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t\t<Drawer\n\t\t\t\t\tvariant='permanent'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'none', sm: 'block' },\n\t\t\t\t\t\t'& .MuiDrawer-paper': {\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\twidth: drawerWidth,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen\n\t\t\t\t>\n\t\t\t\t\t{drawer}\n\t\t\t\t</Drawer>\n\t\t\t</Box>\n\t\t</>\n\t)\n}\n","import React from 'react'\n\nimport { Box } from '@mui/system'\n\ninterface InfoPieceProps {\n\tlabel: string\n\tchildren: React.ReactNode\n}\n\nexport default function InfoPiece(props: InfoPieceProps): React.ReactElement {\n\treturn (\n\t\t<Box sx={{ mt: 1 }}>\n\t\t\t<b>{props.label}</b>\n\t\t\t<br />\n\t\t\t{props.children}\n\t\t</Box>\n\t)\n}\n","import React, { LegacyRef, useCallback, useEffect, useState } from 'react'\n\nimport { BeginEnd, DirectionsQuery } from 'ts/utils/models'\n\nimport { Box, SxProps } from '@mui/system'\nimport {\n\tGoogleMapProvider,\n\tuseDirections,\n} from '@ubilabs/google-maps-react-hooks'\n\nconst MapCanvas = React.forwardRef((props, ref: LegacyRef<HTMLDivElement>) => (\n\t<div ref={ref} style={{ height: '100%' }} />\n))\nMapCanvas.displayName = 'MapCanvas'\n\nexport type MapProps = {\n\tdirectionsQuery: DirectionsQuery\n\tbeginEndCallback?: (beginEnd: BeginEnd | null) => void\n\tlegCallback?: (leg: google.maps.DirectionsLeg | null) => void\n\tsx?: SxProps\n}\n\nfunction Map(props: MapProps): React.ReactElement {\n\tconst { directionsQuery, beginEndCallback, sx } = props\n\tconst [mapContainer, setMapContainer] = useState(null)\n\tconst mapRef = useCallback(node => {\n\t\tnode && setMapContainer(node)\n\t}, [])\n\n\treturn (\n\t\t<Box height='100%' sx={sx}>\n\t\t\t<GoogleMapProvider\n\t\t\t\tgoogleMapsAPIKey={process.env.REACT_APP_GOOGLE_MAPS_KEY ?? ''}\n\t\t\t\tmapContainer={mapContainer}\n\t\t\t\toptions={{\n\t\t\t\t\t// center: {lat: -34.397, lng: 150.644},\n\t\t\t\t\tzoom: 8,\n\t\t\t\t\tfullscreenControl: false,\n\t\t\t\t\tstreetViewControl: false,\n\t\t\t\t\tzoomControl: false,\n\t\t\t\t\tmapTypeControl: false,\n\t\t\t\t}}\n\t\t\t\tonLoad={(map): void => map.setZoom(4)}\n\t\t\t>\n\t\t\t\t<MapCanvas ref={mapRef} />\n\t\t\t\t<PlotRoute\n\t\t\t\t\tdirectionsQuery={directionsQuery}\n\t\t\t\t\tbeginEndCallback={beginEndCallback}\n\t\t\t\t\tlegCallback={props.legCallback}\n\t\t\t\t/>\n\t\t\t</GoogleMapProvider>\n\t\t</Box>\n\t)\n}\n\nfunction PlotRoute(props: {\n\tdirectionsQuery: DirectionsQuery\n\tbeginEndCallback?: (beginEnd: BeginEnd | null) => void\n\tlegCallback?: (leg: google.maps.DirectionsLeg | null) => void\n}): React.ReactElement {\n\tconst { directionsQuery, beginEndCallback, legCallback } = props\n\t// const { map } = useGoogleMap()\n\tconst {\n\t\t// directionsService,\n\t\t// findRoute,\n\t\tfindAndRenderRoute,\n\t\t// renderRouteOfIndex,\n\t} = useDirections({\n\t\trenderOnMap: true,\n\t\trenderOptions: {},\n\t})\n\n\tuseEffect(() => {\n\t\tif (findAndRenderRoute && directionsQuery.start && directionsQuery.end) {\n\t\t\tfindAndRenderRoute({\n\t\t\t\torigin: directionsQuery.start,\n\t\t\t\tdestination: directionsQuery.end,\n\t\t\t\ttravelMode: google.maps.TravelMode.DRIVING,\n\t\t\t})\n\t\t\t\t.then(r => {\n\t\t\t\t\tconst leg = r.routes[0].legs[0]\n\t\t\t\t\tif (beginEndCallback)\n\t\t\t\t\t\tbeginEndCallback({\n\t\t\t\t\t\t\tbeginLocation: {\n\t\t\t\t\t\t\t\tlat: leg.start_location.lat(),\n\t\t\t\t\t\t\t\tlon: leg.start_location.lng(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tendLocation: {\n\t\t\t\t\t\t\t\tlat: leg.end_location.lat(),\n\t\t\t\t\t\t\t\tlon: leg.end_location.lng(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbeginAddress: leg.start_address,\n\t\t\t\t\t\t\tendAddress: leg.end_address,\n\t\t\t\t\t\t})\n\t\t\t\t\tif (legCallback) legCallback(leg)\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tbeginEndCallback && beginEndCallback(null)\n\t\t\t\t\tconsole.error('Error finding route:', e)\n\t\t\t\t})\n\t\t}\n\t}, [directionsQuery.start, directionsQuery.end, findAndRenderRoute])\n\n\treturn <></>\n}\n\nMap.displayName = 'Map'\nexport default React.memo(Map)\n","import {\n\tcreateUserWithEmailAndPassword,\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from 'firebase/auth'\nimport { auth } from 'ts/services/auth'\nimport { User } from 'ts/utils/models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t\tlastSignIn:\n\t\t\t\t(user.metadata.lastSignInTime &&\n\t\t\t\t\tnew Date(user.metadata.lastSignInTime)) ||\n\t\t\t\tundefined,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   POST\n// --------------------------------------------------\n\nexport const signUp = (\n\temail: string,\n\tpassword: string,\n\tname?: string\n): Promise<void> =>\n\tcreateUserWithEmailAndPassword(auth, email, password).then(credential =>\n\t\tupdateProfile(credential.user, { displayName: name })\n\t)\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateProfile(auth.currentUser, { displayName: name })\n\t\t: Promise.reject()\n\nexport const updateEmail = (email: string): Promise<void> =>\n\tauth.currentUser ? updateFireEmail(auth.currentUser, email) : Promise.reject()\n\nexport const updatePassword = (password: string): Promise<void> =>\n\tauth.currentUser\n\t\t? updateFirePassword(auth.currentUser, password)\n\t\t: Promise.reject()\n","import { FormState } from 'ts/utils/models'\n\n/* --------------------------------------\n\t\t\t\t\t\t\tVALUES\n-------------------------------------- */\n\nexport const round = (num: number, decimals = 3): number => {\n\treturn Math.round(num * Math.pow(10, decimals)) / Math.pow(10, decimals)\n}\n\n// Format date to hh:mm a\nexport const formatTime = (dateTime: Date): string => {\n\tconst hours = dateTime.getHours()\n\tconst minutes =\n\t\tdateTime.getMinutes() < 10\n\t\t\t? `0${dateTime.getMinutes()}`\n\t\t\t: dateTime.getMinutes()\n\tconst ampm = hours >= 12 ? 'pm' : 'am'\n\tconst hour = hours % 12 === 0 ? 12 : hours % 12\n\n\treturn `${hour}:${minutes} ${ampm}`\n}\n\nexport const stripUSA = (address: string): string =>\n\taddress.replace(', USA', '')\n\n/* --------------------------------------\n\t\t\t\t\t\t\tFORM STATE\n-------------------------------------- */\nexport function newFormState<FieldNames extends string>(\n\tfields: readonly FieldNames[]\n): FormState<FieldNames> {\n\tconst state: FormState<FieldNames> = {\n\t\tvalues: {} as Record<FieldNames, string>,\n\t\tmessages: {} as Record<FieldNames, string>,\n\t\tisValid: {} as Record<FieldNames, boolean>,\n\t\ttouched: {} as Record<FieldNames, boolean>,\n\t\tvalidators: {} as Record<\n\t\t\tFieldNames,\n\t\t\t(state: FormState<FieldNames>) => FormState<FieldNames>\n\t\t>,\n\t\tformValid: false,\n\t\tformMessage: '',\n\t\tattemptedSubmit: false,\n\t}\n\tfor (const field of fields) {\n\t\tstate.values[field] = ''\n\t\tstate.messages[field] = ''\n\t\tstate.isValid[field] = false\n\t\tstate.touched[field] = false\n\t\tstate.validators[field] = (): FormState<FieldNames> => state\n\t}\n\treturn state\n}\n\nexport function beforeSubmit<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tstate = validateForm(state)\n\tfor (const key in state.touched) state.touched[key] = true\n\tstate.attemptedSubmit = true\n\tif (!state.formValid) state.formMessage = 'Please fix the errors in the form'\n\treturn state\n}\n\nexport function validateForm<FieldNames extends string>(\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tlet isValid = true\n\tfor (const key in state.validators) {\n\t\tstate = state.validators[key](state)\n\t\tif (!state.isValid[key]) isValid = false\n\t}\n\tstate.formValid = isValid\n\treturn state\n}\n\nexport function handleValueChange<FieldNames extends string>(\n\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\tstate: FormState<FieldNames>\n): FormState<FieldNames> {\n\tconst name = event.target.name as FieldNames\n\tconst value = event.target.value\n\n\tif (!state.isValid[name]) state = state.validators[name](state)\n\tconst fieldValues = state.values\n\tfieldValues[name] = value\n\treturn { ...state, values: fieldValues }\n}\n","import get from 'axios'\nimport { Weather } from 'ts/utils/models'\n\nconst openWeatherMapApi = 'https://api.openweathermap.org/data/2.5'\n\nexport const getWeather = (lat: number, lon: number): Promise<Weather> =>\n\tget(`${openWeatherMapApi}/onecall`, {\n\t\tparams: {\n\t\t\tlat: lat,\n\t\t\tlon: lon,\n\t\t\tappid: process.env.REACT_APP_OPEN_WEATHER_MAP,\n\t\t\tunits: 'imperial',\n\t\t},\n\t}).then(r => r.data)\n","import { getWeather } from 'ts/services/weather'\nimport { TimePoint, TimePointWeather } from 'ts/utils/models'\n\n/**\n *\n * @param leg Google maps leg\n * @returns A list of objects containing the time and location at each location along the route\n */\nexport function getTimePoints(leg: google.maps.DirectionsLeg): TimePoint[] {\n\tconst timePoints: TimePoint[] = []\n\tlet timeAccumulator = 0\n\tfor (const step of leg.steps) {\n\t\ttimePoints.push({\n\t\t\ttime: timeAccumulator,\n\t\t\tpoint: {\n\t\t\t\tlat: step.start_location.lat(),\n\t\t\t\tlon: step.start_location.lng(),\n\t\t\t},\n\t\t})\n\t\ttimeAccumulator += step.duration?.value ?? 0\n\t}\n\ttimePoints.push({\n\t\ttime: timeAccumulator,\n\t\tpoint: {\n\t\t\tlat: leg.end_location.lat(),\n\t\t\tlon: leg.end_location.lng(),\n\t\t},\n\t})\n\treturn timePoints\n}\n\n/**\n *\n * @param timePoints a list of coordinates with respective times\n * @param interval the target time between points\n * @returns a shorter list of TimePoints where the time between them is approx 'interval'\n */\nexport function reduceTimePoints(\n\ttimePoints: TimePoint[],\n\tmaxPoints = 5\n): TimePoint[] {\n\tconst interval =\n\t\tMath.min(timePoints[timePoints.length - 1].time, 172800) / maxPoints\n\tconst reducedTimePoints: TimePoint[] = []\n\tfor (\n\t\tlet targetTime = 0;\n\t\ttargetTime < timePoints[timePoints.length - 1].time;\n\t\ttargetTime += interval\n\t) {\n\t\t// Find the index of the point after the target time\n\t\tconst index = timePoints.findIndex(\n\t\t\ttimePoint => timePoint.time >= targetTime\n\t\t)\n\t\tif (index === 0) {\n\t\t\treducedTimePoints.push(timePoints[0])\n\t\t} else {\n\t\t\t// Get the points before (t1) and after (t2) the target time\n\t\t\tconst t1 = timePoints[index]\n\t\t\tconst t2 = timePoints[index - 1]\n\n\t\t\t// Determine if t1 or t2 is closer to the target time\n\t\t\tconst selectedTimePoint =\n\t\t\t\tMath.abs(t1.time - targetTime) < Math.abs(t2.time - targetTime)\n\t\t\t\t\t? t1\n\t\t\t\t\t: t2\n\n\t\t\t// Add the selected time point to the reduced list if it is not already there\n\t\t\tif (\n\t\t\t\treducedTimePoints.length == 0 ||\n\t\t\t\treducedTimePoints[reducedTimePoints.length - 1].time !==\n\t\t\t\t\tselectedTimePoint.time\n\t\t\t) {\n\t\t\t\treducedTimePoints.push(selectedTimePoint)\n\t\t\t}\n\t\t}\n\t}\n\treturn reducedTimePoints\n}\n\n// Given an array of TimePoints, return an array of TimePointWeathr objects, getting the weather for each TimePoint\nexport async function getTimePointWeather(\n\ttimePoints: TimePoint[],\n\tupdateLoading?: (percentage: number | ((previous: number) => number)) => void\n): Promise<TimePointWeather[]> {\n\tconst timePointWeather: TimePointWeather[] = []\n\n\tfor (const timePoint of timePoints) {\n\t\tupdateLoading && updateLoading(p => p + 100 / timePoints.length)\n\t\tconst weather = await getWeather(timePoint.point.lat, timePoint.point.lon)\n\t\tconst hour = Math.round(timePoint.time / 3600)\n\t\tif (hour > 47) break\n\n\t\ttimePointWeather.push({\n\t\t\t...timePoint,\n\t\t\tweather: weather.hourly[hour],\n\t\t})\n\t}\n\tupdateLoading && updateLoading(100)\n\treturn timePointWeather\n}\n","import React, { useEffect } from 'react'\n\nimport { formatTime } from 'ts/utils/helpers'\nimport { TimePointWeather } from 'ts/utils/models'\n\nimport {\n\tLinearProgress,\n\tPaper,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n} from '@mui/material'\n\nimport {\n\tgetTimePoints,\n\tgetTimePointWeather,\n\treduceTimePoints,\n} from './displayRouteHelpers'\n\nexport default function RouteWeather(props: {\n\tleg: google.maps.DirectionsLeg | null\n}): React.ReactElement {\n\tconst { leg } = props\n\tconst [weatherLoadProgress, setWeatherLoadProgress] = React.useState(0)\n\tconst [timePointWeather, setTimePointWeather] =\n\t\tReact.useState<TimePointWeather[]>()\n\n\tuseEffect(() => {\n\t\tif (leg) {\n\t\t\tconst timePoints = reduceTimePoints(getTimePoints(leg), 8)\n\t\t\tgetTimePointWeather(timePoints, setWeatherLoadProgress).then(arr => {\n\t\t\t\tsetTimePointWeather(arr)\n\t\t\t})\n\t\t}\n\t}, [leg])\n\n\tfunction createJsDate(secondsOffset: number): Date {\n\t\treturn new Date(new Date().getTime() + secondsOffset * 1000)\n\t}\n\n\tif (!timePointWeather) {\n\t\treturn <LinearProgress variant='determinate' value={weatherLoadProgress} />\n\t}\n\n\treturn (\n\t\t<TableContainer\n\t\t\tcomponent={Paper}\n\t\t\tsx={{ maxWidth: '100%', overflow: 'scroll' }}\n\t\t>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Time</TableCell>\n\t\t\t\t\t\t<TableCell>Temp.</TableCell>\n\t\t\t\t\t\t<TableCell>Precip.</TableCell>\n\t\t\t\t\t\t<TableCell>Clouds</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{timePointWeather.map((weather, i) => (\n\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tsx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TableCell>{formatTime(createJsDate(weather.time))}</TableCell>\n\t\t\t\t\t\t\t<TableCell>{Math.round(weather.weather.temp)}º</TableCell>\n\t\t\t\t\t\t\t<TableCell>{Math.round(weather.weather.pop * 100)}%</TableCell>\n\t\t\t\t\t\t\t<TableCell>{weather.weather.clouds}%</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t)\n}\n","import DisplayRoute from './DisplayRoute'\n\nexport default DisplayRoute\n","import React, { useEffect } from 'react'\n\nimport { useParams } from 'react-router-dom'\nimport InfoPiece from 'ts/components/InfoPiece'\nimport Map from 'ts/components/Map'\nimport { getSavedRoute } from 'ts/services/savedRoutes'\nimport { stripUSA } from 'ts/utils/helpers'\nimport { SavedRoute } from 'ts/utils/models'\n\nimport { CircularProgress, Container, Typography } from '@mui/material'\n\nimport RouteWeather from './RouteWeather'\n\nexport default function DisplayRoute(): React.ReactElement {\n\tconst urlParams = useParams<{ id: string }>()\n\tconst [route, setRoute] = React.useState<SavedRoute>()\n\tconst [leg, setLeg] = React.useState<google.maps.DirectionsLeg | null>(null)\n\n\tuseEffect(() => {\n\t\tgetSavedRoute(urlParams.id).then(r => setRoute(r))\n\t}, [])\n\n\tif (!route) {\n\t\treturn (\n\t\t\t<Container sx={{ textAlign: 'center', mt: 5 }}>\n\t\t\t\t<CircularProgress />\n\t\t\t</Container>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Container sx={{ maxWidth: '100vw' }}>\n\t\t\t<Typography variant='h1'>{route.name}</Typography>\n\t\t\t<InfoPiece label='Begin'>{stripUSA(route.beginAddress ?? '')}</InfoPiece>\n\t\t\t<InfoPiece label='End'>{stripUSA(route.endAddress ?? '')}</InfoPiece>\n\t\t\t{leg && (\n\t\t\t\t<>\n\t\t\t\t\t<InfoPiece label='Duration'>{leg.duration?.text}</InfoPiece>\n\t\t\t\t\t<InfoPiece label='Distance'>{leg.distance?.text}</InfoPiece>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<Typography variant='h2' sx={{ mb: 3 }}>\n\t\t\t\tWeather\n\t\t\t</Typography>\n\t\t\t<RouteWeather leg={leg} />\n\n\t\t\t<Typography variant='h2' sx={{ mb: 3 }}>\n\t\t\t\tMap\n\t\t\t</Typography>\n\t\t\t<Map\n\t\t\t\tdirectionsQuery={{\n\t\t\t\t\tstart: `${route.beginLocation.lat}, ${route.beginLocation.lon}`,\n\t\t\t\t\tend: `${route.endLocation.lat}, ${route.endLocation.lon}`,\n\t\t\t\t}}\n\t\t\t\tlegCallback={setLeg}\n\t\t\t\tsx={{ mt: 3, pb: 3, height: '400px' }}\n\t\t\t/>\n\t\t</Container>\n\t)\n}\n","import {\n\tcollection,\n\tdeleteDoc,\n\tdoc,\n\tgetDoc,\n\tgetDocs,\n\tsetDoc,\n} from 'firebase/firestore'\nimport { SavedRoute } from 'ts/utils/models'\n\nimport { database } from './firebase'\nimport { getUser } from './user'\n\ntype newSavedRouteParams = Omit<SavedRoute, 'id'>\n\nexport const newSavedRoute = (route: newSavedRouteParams): Promise<void> => {\n\tconst user = getUser()\n\tif (!user) return Promise.reject()\n\n\tconst userCollection = collection(database, user.id)\n\n\treturn setDoc(doc(userCollection), route)\n\t\t.then(() => Promise.resolve())\n\t\t.catch(() => Promise.reject())\n}\n\nexport const getSavedRoutes = (): Promise<SavedRoute[]> => {\n\tconst user = getUser()\n\tif (!user) return Promise.reject()\n\n\treturn getDocs(collection(database, user.id))\n\t\t.then(r => {\n\t\t\tconst routes: SavedRoute[] = []\n\t\t\tr.forEach(doc => routes.push({ ...doc.data(), id: doc.id } as SavedRoute))\n\t\t\treturn Promise.resolve(routes)\n\t\t})\n\t\t.catch(() => Promise.reject())\n}\n\nexport const getSavedRoute = (id: string): Promise<SavedRoute> => {\n\tconst user = getUser()\n\tif (!user) return Promise.reject()\n\n\treturn getDoc(doc(database, user.id, id))\n\t\t.then(r => Promise.resolve(r.data() as SavedRoute))\n\t\t.catch(() => Promise.reject())\n}\n\nexport const deleteSavedRoute = (id: string): Promise<void> => {\n\tconst user = getUser()\n\tif (!user) return Promise.reject()\n\n\treturn deleteDoc(doc(collection(database, user.id), id))\n\t\t.then(() => Promise.resolve())\n\t\t.catch(() => Promise.reject())\n}\n","import React from 'react'\n\nimport Map from 'ts/components/Map'\n\nfunction Home(): React.ReactElement {\n\treturn <Map directionsQuery={{ start: 'logan, ut', end: 'ogden, ut' }} />\n}\n\nexport default React.memo(Home)\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Recent login required. Please sign out then sign back in to perform this action',\n\t'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n\t'auth/email-already-in-use': 'An account already exists with this email',\n}\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState, User } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'email'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (user: User): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalues: {\n\t\t\tname: user.name ?? '',\n\t\t\temail: user.email ?? '',\n\t\t},\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tname: nameValidator,\n\t\t},\n\t}\n}\n","import ProfileForm from './ProfileForm'\n\nexport default ProfileForm\n","import React, { useContext, useEffect } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState(user))\n\tconst [hasChanged, setHasChanged] = React.useState(false)\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsetHasChanged(\n\t\t\t\tuser.name !== formState.values.name ||\n\t\t\t\t\tuser.email !== formState.values.email\n\t\t\t),\n\t\t[formState]\n\t)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tPromise.all([\n\t\t\tuser.name !== formState.values.name\n\t\t\t\t? updateName(formState.values.name)\n\t\t\t\t: Promise.resolve(),\n\t\t\tuser.email !== formState.values.email\n\t\t\t\t? updateEmail(formState.values.email)\n\t\t\t\t: Promise.resolve(),\n\t\t])\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tdefaultValue={user.name}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Email'\n\t\t\t\ttype='email'\n\t\t\t\tname='email'\n\t\t\t\tdefaultValue={user.email}\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, display: hasChanged ? 'default' : 'none' }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Save Changes'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ProfileForm from 'ts/forms/Profile'\n\nimport { Container, Typography } from '@mui/material'\n\nexport default function Profile(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Edit Profile</Typography>\n\t\t\t<ProfileForm />\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport {\n\tLink as RouterLink,\n\tLinkProps as RouterLinkProps,\n} from 'react-router-dom'\n\nimport { createTheme } from '@mui/material/styles'\n\n// Allow adapting MUI links to react-router-dom links\nconst LinkBehavior = React.forwardRef<\n\tany,\n\tOmit<RouterLinkProps, 'to'> & { href: RouterLinkProps['to'] }\n>((props, ref) => {\n\tconst { href, ...other } = props\n\t// Map href (MUI) -> to (react-router)\n\treturn <RouterLink ref={ref} to={href} {...other} />\n})\n\nLinkBehavior.displayName = 'LinkBehavior'\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#2a8544',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#f50057',\n\t\t},\n\t},\n\tcomponents: {\n\t\tMuiLink: {\n\t\t\tdefaultProps: {\n\t\t\t\t// @ts-ignore\n\t\t\t\tcomponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\tdefaultProps: {\n\t\t\t\tLinkComponent: LinkBehavior,\n\t\t\t},\n\t\t},\n\t},\n\ttypography: {\n\t\th1: {\n\t\t\tcolor: '#2a8544',\n\t\t\tfontSize: '2.5rem',\n\t\t\tfontWeight: '500',\n\t\t\tmarginTop: '1.5rem',\n\t\t},\n\t\th2: {\n\t\t\tcolor: '#2a8544',\n\t\t\tfontSize: '1.5rem',\n\t\t\tfontWeight: '500',\n\t\t\tmarginTop: '1.5rem',\n\t\t},\n\t},\n})\n\nexport default theme\n","import { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'start', 'end'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const startValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.start = state.values.start.length > 0\n\tstate.messages.start = state.isValid.start ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const endValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.end = state.values.end.length > 0\n\tstate.messages.end = state.isValid.end ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tname: nameValidator,\n\t\t\tstart: startValidator,\n\t\t\tend: endValidator,\n\t\t},\n\t}\n}\n","import React from 'react'\n\nimport Map from 'ts/components/Map'\nimport { getMessage } from 'ts/services/errors'\nimport { newSavedRoute } from 'ts/services/savedRoutes'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport { BeginEnd, DirectionsQuery } from 'ts/utils/models'\n\nimport { Alert, Stack, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport const NewSavedRouteFormId = 'new-saved-route-form'\n\ninterface NewSavedRouteFormProps {\n\tsetSubmitting: (submitting: boolean) => void\n\tsubmitCallback: () => void\n}\n\nexport default function NewSavedRouteForm(\n\tprops: NewSavedRouteFormProps\n): React.ReactElement {\n\tconst { setSubmitting, submitCallback } = props\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\tconst [directionsQuery, setDirectionsQuery] =\n\t\tReact.useState<DirectionsQuery>()\n\tconst [beginEndResult, setBeginEndResult] = React.useState<BeginEnd | null>()\n\n\tfunction updateWaypoints(): void {\n\t\tsetDirectionsQuery({\n\t\t\tstart: formState.values.start,\n\t\t\tend: formState.values.end,\n\t\t})\n\t}\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\t\tif (!beginEndResult) {\n\t\t\tsetFormState(state => {\n\t\t\t\treturn { ...state, formMessage: 'No route found' }\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tsetSubmitting(true)\n\n\t\tnewSavedRoute({\n\t\t\tname: formState.values.name,\n\t\t\t...beginEndResult,\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tsubmitCallback()\n\t\t\t})\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Stack gap={2}>\n\t\t\t<Box\n\t\t\t\tid={NewSavedRouteFormId}\n\t\t\t\tcomponent='form'\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tnoValidate\n\t\t\t\tsx={{ height: '100%' }}\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tfullWidth\n\t\t\t\t\tlabel='Route Name'\n\t\t\t\t\tname='name'\n\t\t\t\t\tmargin='normal'\n\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t}\n\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t}}\n\t\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tfullWidth\n\t\t\t\t\tlabel='Start Location'\n\t\t\t\t\tname='start'\n\t\t\t\t\tmargin='normal'\n\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t}\n\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\tformState.touched.start = true\n\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\tupdateWaypoints()\n\t\t\t\t\t}}\n\t\t\t\t\terror={formState.touched.start && !formState.isValid.start}\n\t\t\t\t\thelperText={formState.touched.start && formState.messages.start}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tfullWidth\n\t\t\t\t\tlabel='End Location'\n\t\t\t\t\tname='end'\n\t\t\t\t\tmargin='normal'\n\t\t\t\t\tonChange={(e): void =>\n\t\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t\t}\n\t\t\t\t\tonBlur={(): void => {\n\t\t\t\t\t\tformState.touched.end = true\n\t\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t\t\tupdateWaypoints()\n\t\t\t\t\t}}\n\t\t\t\t\terror={formState.touched.end && !formState.isValid.end}\n\t\t\t\t\thelperText={formState.touched.end && formState.messages.end}\n\t\t\t\t/>\n\t\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t</Box>\n\n\t\t\t{directionsQuery?.start && directionsQuery.end && (\n\t\t\t\t<Map\n\t\t\t\t\tdirectionsQuery={directionsQuery}\n\t\t\t\t\tbeginEndCallback={(beginEnd): void => setBeginEndResult(beginEnd)}\n\t\t\t\t\tsx={{ height: '20rem' }}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Stack>\n\t)\n}\n","import NewSavedRouteForm from './NewSavedRouteForm'\n\nexport default NewSavedRouteForm\n","import React from 'react'\n\nimport theme from 'theme'\nimport NewSavedRouteForm from 'ts/forms/NewSavedRoute'\nimport { NewSavedRouteFormId } from 'ts/forms/NewSavedRoute/NewSavedRouteForm'\n\nimport {\n\tButton,\n\tCircularProgress,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tuseMediaQuery,\n} from '@mui/material'\n\nexport interface NewRouteDialogProps {\n\topen: boolean\n\tonClose: () => void\n}\n\nexport default function NewRouteDialog(\n\tprops: NewRouteDialogProps\n): React.ReactElement {\n\tconst { open, onClose } = props\n\tconst fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\treturn (\n\t\t<Dialog\n\t\t\tfullScreen={fullScreen}\n\t\t\topen={open}\n\t\t\tfullWidth\n\t\t\tmaxWidth='sm'\n\t\t\tscroll='paper'\n\t\t>\n\t\t\t<DialogTitle>New Saved Route</DialogTitle>\n\t\t\t<DialogContent dividers>\n\t\t\t\t<NewSavedRouteForm\n\t\t\t\t\tsetSubmitting={setSubmitting}\n\t\t\t\t\tsubmitCallback={onClose}\n\t\t\t\t/>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions sx={{ pb: fullScreen ? 5 : 'default' }}>\n\t\t\t\t<Button onClick={onClose}>Cancel</Button>\n\t\t\t\t<Button\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tdisabled={submitting}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tform={NewSavedRouteFormId}\n\t\t\t\t>\n\t\t\t\t\t{submitting ? (\n\t\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t'Create Route'\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n","import React, { useState } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { deleteSavedRoute } from 'ts/services/savedRoutes'\nimport {\n\tround,\n\tstripUSA,\n} from 'ts/utils/helpers'\nimport { SavedRoute } from 'ts/utils/models'\nimport Paths from 'ts/utils/paths'\n\nimport {\n\tIcon,\n\tIconButton,\n\tListItem,\n\tListItemButton,\n\tListItemIcon,\n\tListItemText,\n\tMenu,\n\tMenuItem,\n} from '@mui/material'\n\nexport interface SavedRouteListItemProps {\n\troute: SavedRoute\n\tchangeCallback: () => void\n}\n\nexport default function SavedRouteListItem(\n\tprops: SavedRouteListItemProps\n): React.ReactElement {\n\tconst { route, changeCallback } = props\n\n\tconst [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n\tconst open = Boolean(anchorEl)\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n\t\tsetAnchorEl(event.currentTarget)\n\t}\n\tconst handleClose = (): void => {\n\t\tsetAnchorEl(null)\n\t}\n\n\tfunction handleDelete(): void {\n\t\tdeleteSavedRoute(route.id)\n\t\t\t.then(() => changeCallback())\n\t\t\t.catch(() => alert('Error deleting saved route'))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ListItem\n\t\t\t\tdisablePadding\n\t\t\t\tsecondaryAction={\n\t\t\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t\t\t<Icon>more_vert</Icon>\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<ListItemButton\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={Paths.getDisplayRouteLink(route.id)}\n\t\t\t\t>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Icon>directions</Icon>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText\n\t\t\t\t\t\tprimary={route.name}\n\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span style={{ display: 'block' }}>\n\t\t\t\t\t\t\t\t\t{route.beginAddress\n\t\t\t\t\t\t\t\t\t\t? stripUSA(route.beginAddress)\n\t\t\t\t\t\t\t\t\t\t: `${round(route.beginLocation.lat)}º, ${round(\n\t\t\t\t\t\t\t\t\t\t\t\troute.beginLocation.lon\n\t\t\t\t\t\t\t\t\t\t)}º`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span style={{ display: 'block' }}>\n\t\t\t\t\t\t\t\t\t{route.endAddress\n\t\t\t\t\t\t\t\t\t\t? stripUSA(route.endAddress)\n\t\t\t\t\t\t\t\t\t\t: `${round(route.endLocation.lat)}º, ${round(\n\t\t\t\t\t\t\t\t\t\t\t\troute.endLocation.lon\n\t\t\t\t\t\t\t\t\t\t)}º`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</ListItemButton>\n\t\t\t\t<Menu\n\t\t\t\t\tid='basic-menu'\n\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\topen={open}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t'aria-labelledby': 'basic-button',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem onClick={handleDelete}>Delete route</MenuItem>\n\t\t\t\t</Menu>\n\t\t\t</ListItem>\n\t\t</>\n\t)\n}\n","import SavedRoutes from './SavedRoutes'\n\nexport default SavedRoutes\n","import React, { useEffect } from 'react'\n\nimport { getSavedRoutes } from 'ts/services/savedRoutes'\nimport { SavedRoute } from 'ts/utils/models'\n\nimport {\n\tAlert,\n\tCircularProgress,\n\tContainer,\n\tFab,\n\tIcon,\n\tList,\n\tTypography,\n} from '@mui/material'\n\nimport NewRouteDialog from './NewRouteDialog'\nimport SavedRouteListItem from './SavedRouteListItem'\n\nexport default function SavedRoutes(): React.ReactElement {\n\tconst [savedRoutes, setSavedRoutes] = React.useState<SavedRoute[]>()\n\tconst [errorText, setErrorText] = React.useState<string>()\n\tconst [showDialog, setShowDialog] = React.useState(false)\n\tuseEffect(() => updateSavedRoutes(), [])\n\n\tconst updateSavedRoutes = (): void => {\n\t\tgetSavedRoutes()\n\t\t\t.then(r => setSavedRoutes(r))\n\t\t\t.catch(() => setErrorText('Error loading saved routes'))\n\t}\n\n\tconst renderRouteList = (): React.ReactElement => {\n\t\tif (!savedRoutes)\n\t\t\treturn <CircularProgress sx={{ display: 'block', mx: 'auto', mt: 3 }} />\n\n\t\tif (savedRoutes.length === 0)\n\t\t\treturn (\n\t\t\t\t<p>\n\t\t\t\t\tNo saved routes. Click the{' '}\n\t\t\t\t\t<Icon sx={{ fontSize: '1rem', fontWeight: 'bold' }}>add</Icon> icon to\n\t\t\t\t\tadd a new one.\n\t\t\t\t</p>\n\t\t\t)\n\n\t\treturn (\n\t\t\t<List>\n\t\t\t\t{savedRoutes\n\t\t\t\t\t.sort((a, b) => (a.name < b.name ? -1 : 1))\n\t\t\t\t\t.map(route => (\n\t\t\t\t\t\t<div key={route.id}>\n\t\t\t\t\t\t\t<SavedRouteListItem\n\t\t\t\t\t\t\t\troute={route}\n\t\t\t\t\t\t\t\tchangeCallback={updateSavedRoutes}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t</List>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1' sx={{ mb: 2 }}>\n\t\t\t\tSaved Routes\n\t\t\t</Typography>\n\t\t\t<Fab\n\t\t\t\tcolor='primary'\n\t\t\t\tonClick={(): void => setShowDialog(true)}\n\t\t\t\tsx={{\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\tbottom: '2rem',\n\t\t\t\t\tright: '1.5rem',\n\t\t\t\t\tzIndex: 1000,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Icon>add</Icon>\n\t\t\t</Fab>\n\t\t\t{errorText ? (\n\t\t\t\t<Alert severity='error'>{errorText}</Alert>\n\t\t\t) : (\n\t\t\t\trenderRouteList()\n\t\t\t)}\n\t\t\t<NewRouteDialog\n\t\t\t\topen={showDialog}\n\t\t\t\tonClose={(): void => {\n\t\t\t\t\tsetShowDialog(false), updateSavedRoutes()\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Container>\n\t)\n}\n","import { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 0\n\tstate.messages.password1 = state.isValid.password1 ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password1 === state.values.password2\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import ChangePasswordForm from './ChangePasswordForm'\n\nexport default ChangePasswordForm\n","import React, { Context, useState } from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Navigation from 'ts/components/Navigation'\nimport DisplayRoute from 'ts/containers/DisplayRoute'\nimport Home from 'ts/containers/Home'\nimport Profile from 'ts/containers/Profile'\nimport SavedRoutes from 'ts/containers/SavedRoutes'\nimport Security from 'ts/containers/Security'\nimport Weather from 'ts/containers/Weather'\nimport { getUser } from 'ts/services/user'\nimport { drawerWidth } from 'ts/utils/constants'\nimport { User } from 'ts/utils/models'\nimport Paths from 'ts/utils/paths'\n\nimport { Box, Stack, Toolbar } from '@mui/material'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<Box sx={{ display: 'flex', height: '100vh' }}>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='main'\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\twidth: { sm: `calc(100% - ${drawerWidth}px)` },\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Stack height='100%'>\n\t\t\t\t\t\t\t<Toolbar />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path={Paths.home} component={Home} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.savedRoutes} component={SavedRoutes} />\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath={Paths.displayRoute}\n\t\t\t\t\t\t\t\t\tcomponent={DisplayRoute}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route exact path={Paths.weather} component={Weather} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.profile} component={Profile} />\n\t\t\t\t\t\t\t\t<Route exact path={Paths.security} component={Security} />\n\n\t\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t\t\t<Redirect to={Paths.home} />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Box>\n\t\t\t\t</HashRouter>\n\t\t\t</Box>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import React, { useContext } from 'react'\n\nimport { UserContext } from 'App'\nimport { getMessage } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\n\nimport { Alert, Button, CircularProgress, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { getInitialFormState } from './validation'\n\nexport default function ChangePasswordForm(): React.ReactElement {\n\tconst { updateUser } = useContext(UserContext)\n\tconst [submitting, setSubmitting] = React.useState(false)\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tupdatePassword(formState.values.password1)\n\t\t\t.then(() => updateUser())\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password1'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tvariant='standard'\n\t\t\t\tfullWidth\n\t\t\t\tlabel='Confirm New Password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password2'\n\t\t\t\tmargin='normal'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2 }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Change Password'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n","import React from 'react'\n\nimport ChangePasswordForm from 'ts/forms/ChangePassword'\n\nimport { Container, Typography } from '@mui/material'\n\nexport default function Security(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Change Password</Typography>\n\t\t\t<ChangePasswordForm />\n\t\t</Container>\n\t)\n}\n","import React, { useEffect } from 'react'\n\nimport InfoPiece from 'ts/components/InfoPiece'\nimport { getWeather } from 'ts/services/weather'\nimport { CurrentWeather } from 'ts/utils/models'\n\nimport { Alert, Container, LinearProgress, Typography } from '@mui/material'\n\nexport default function Weather(): React.ReactElement {\n\tconst [currentPosition, setCurrentPosition] = React.useState<\n\t\tGeolocationPosition | null | undefined\n\t>(undefined)\n\tconst [currentWeather, setCurrentWeather] = React.useState<CurrentWeather>()\n\tconst [errorText, setErrorText] = React.useState<string>()\n\n\tconst handleGetWeather = (): void => {\n\t\tcurrentPosition &&\n\t\t\tgetWeather(\n\t\t\t\tcurrentPosition.coords.latitude,\n\t\t\t\tcurrentPosition.coords.longitude\n\t\t\t)\n\t\t\t\t.then(r => setCurrentWeather(r.current))\n\t\t\t\t.catch(e => setErrorText(e.response.data.message))\n\t}\n\n\tuseEffect(() => {\n\t\tif (navigator.geolocation)\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\tlocation => setCurrentPosition(location),\n\t\t\t\terror => {\n\t\t\t\t\tswitch (error.code) {\n\t\t\t\t\t\tcase error.PERMISSION_DENIED:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText('Location request denied')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase error.POSITION_UNAVAILABLE:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText('Location information is unavailable')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase error.TIMEOUT:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText('Location request timed out')\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsetCurrentPosition(null)\n\t\t\t\t\t\t\tsetErrorText(\n\t\t\t\t\t\t\t\t'An unknown error occurred while getting the location'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\telse alert('Geolocation is not supported by this browser.')\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (currentPosition) handleGetWeather()\n\t}, [currentPosition])\n\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant='h1'>Weather</Typography>\n\n\t\t\t<p>Weather for current location</p>\n\n\t\t\t{!errorText && (!currentWeather || !currentPosition) && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant='overline'>\n\t\t\t\t\t\t{!currentPosition\n\t\t\t\t\t\t\t? 'Getting current location...'\n\t\t\t\t\t\t\t: 'Getting weather...'}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<LinearProgress />\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{errorText && <Alert severity='error'>{errorText}</Alert>}\n\n\t\t\t{currentWeather && (\n\t\t\t\t<div>\n\t\t\t\t\t<InfoPiece label='Temperature'>{currentWeather?.temp}ºF</InfoPiece>\n\t\t\t\t\t<InfoPiece label='Humidity'>{currentWeather?.humidity}%</InfoPiece>\n\t\t\t\t\t<InfoPiece label='Cloud Cover'>{currentWeather?.clouds}%</InfoPiece>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Container>\n\t)\n}\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['email', 'password'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const passwordValidator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password = state.values.password.length > 0\n\tstate.messages.password = state.isValid.password ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\temail: emailValidator,\n\t\t\tpassword: passwordValidator,\n\t\t},\n\t}\n}\n","import SignInForm from './SignInForm'\n\nexport default SignInForm\n","import React from 'react'\n\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport {\n\tAlert,\n\tBox,\n\tButton,\n\tCircularProgress,\n\tLink,\n\tTextField,\n} from '@mui/material'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignInForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState())\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignIn(formState.values.email, formState.values.password)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\ttype='email'\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password'\n\t\t\t\tautoComplete='current-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password && !formState.isValid.password}\n\t\t\t\thelperText={formState.touched.password && formState.messages.password}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, mb: 2 }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign In'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signUp} variant='body2'>\n\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignInForm from 'ts/forms/SignIn'\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport { Avatar, Box, Container, Typography } from '@mui/material'\n\nexport default function SignIn(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<SignInForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import { EMAIL_REGEX } from 'ts/utils/constants'\nimport { newFormState } from 'ts/utils/helpers'\nimport { FormState } from 'ts/utils/models'\n\nconst fieldsArray = ['name', 'email', 'password1', 'password2'] as const\ntype Fields = typeof fieldsArray[number]\n\nexport const nameValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.name = state.values.name.length > 0\n\tstate.messages.name = state.isValid.name ? '' : 'Required'\n\treturn { ...state }\n}\n\nexport const emailValidator = (state: FormState<Fields>): FormState<Fields> => {\n\tstate.isValid.email = !!state.values.email.match(EMAIL_REGEX)\n\tstate.messages.email = state.isValid.email ? '' : 'Invalid email address'\n\treturn { ...state }\n}\n\nexport const password1Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password1 = state.values.password1.length > 4\n\tstate.messages.password1 = state.isValid.password1\n\t\t? ''\n\t\t: 'Must be at least 5 characters long'\n\treturn { ...state }\n}\n\nexport const password2Validator = (\n\tstate: FormState<Fields>\n): FormState<Fields> => {\n\tstate.isValid.password2 = state.values.password2 === state.values.password1\n\tstate.messages.password2 = state.isValid.password2\n\t\t? ''\n\t\t: 'Passwords do not match'\n\treturn { ...state }\n}\n\nexport const getInitialFormState = (): FormState<Fields> => {\n\treturn {\n\t\t...newFormState(fieldsArray),\n\t\tvalidators: {\n\t\t\tname: nameValidator,\n\t\t\temail: emailValidator,\n\t\t\tpassword1: password1Validator,\n\t\t\tpassword2: password2Validator,\n\t\t},\n\t}\n}\n","import SignUpForm from './SignUpForm'\n\nexport default SignUpForm\n","import * as React from 'react'\n\nimport { getMessage } from 'ts/services/errors'\nimport { signUp } from 'ts/services/user'\nimport { beforeSubmit, handleValueChange, validateForm } from 'ts/utils/helpers'\nimport Paths from 'ts/utils/paths'\n\nimport { Alert, CircularProgress, Link } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\n\nimport { getInitialFormState } from './validation'\n\nexport default function SignUpForm(): React.ReactElement {\n\tconst [submitting, setSubmitting] = React.useState(false)\n\n\tconst [formState, setFormState] = React.useState(getInitialFormState)\n\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n\t\tevent.preventDefault()\n\n\t\tsetFormState(state => beforeSubmit(state))\n\n\t\tif (!formState.formValid) return\n\n\t\tsetSubmitting(true)\n\n\t\tsignUp(\n\t\t\tformState.values.email,\n\t\t\tformState.values.password1,\n\t\t\tformState.values.name\n\t\t)\n\t\t\t.catch(e =>\n\t\t\t\tsetFormState(state => {\n\t\t\t\t\treturn { ...state, formMessage: getMessage(e) }\n\t\t\t\t})\n\t\t\t)\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='name'\n\t\t\t\tlabel='Name'\n\t\t\t\tname='name'\n\t\t\t\tautoComplete='name'\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.name = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.name && !formState.isValid.name}\n\t\t\t\thelperText={formState.touched.name && formState.messages.name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tid='email'\n\t\t\t\tlabel='Email'\n\t\t\t\tname='email'\n\t\t\t\ttype='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.email = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.email && !formState.isValid.email}\n\t\t\t\thelperText={formState.touched.email && formState.messages.email}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password1'\n\t\t\t\tlabel='Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password1'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password1 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password1 && !formState.isValid.password1}\n\t\t\t\thelperText={formState.touched.password1 && formState.messages.password1}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin='normal'\n\t\t\t\trequired\n\t\t\t\tfullWidth\n\t\t\t\tname='password2'\n\t\t\t\tlabel='Confirm Password'\n\t\t\t\ttype='password'\n\t\t\t\tid='password2'\n\t\t\t\tautoComplete='new-password'\n\t\t\t\tonChange={(e): void =>\n\t\t\t\t\tsetFormState(state => handleValueChange(e, state))\n\t\t\t\t}\n\t\t\t\tonBlur={(): void => {\n\t\t\t\t\tformState.touched.password2 = true\n\t\t\t\t\tsetFormState(state => validateForm(state))\n\t\t\t\t}}\n\t\t\t\terror={formState.touched.password2 && !formState.isValid.password2}\n\t\t\t\thelperText={formState.touched.password2 && formState.messages.password2}\n\t\t\t/>\n\t\t\t{formState.attemptedSubmit && formState.formMessage && (\n\t\t\t\t<Alert sx={{ mt: 2 }} severity='error'>\n\t\t\t\t\t{formState.formMessage || 'Form error'}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={submitting}\n\t\t\t\tfullWidth\n\t\t\t\tvariant='contained'\n\t\t\t\tsx={{ mt: 2, mb: 2 }}\n\t\t\t>\n\t\t\t\t{submitting ? (\n\t\t\t\t\t<CircularProgress size={24} color='inherit' />\n\t\t\t\t) : (\n\t\t\t\t\t'Sign Up'\n\t\t\t\t)}\n\t\t\t</Button>\n\t\t\t<Link href={Paths.signIn} variant='body2'>\n\t\t\t\t{'Already have an account? Sign In'}\n\t\t\t</Link>\n\t\t</Box>\n\t)\n}\n","import * as React from 'react'\n\nimport SignUpForm from 'ts/forms/SignUp'\n\nimport PersonIcon from '@mui/icons-material/Person'\nimport { Container } from '@mui/material'\nimport Avatar from '@mui/material/Avatar'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\n\nexport default function SignUp(): React.ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<PersonIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign Up\n\t\t\t\t</Typography>\n\t\t\t\t<SignUpForm />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React from 'react'\n\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/components/SignIn'\nimport SignUp from 'ts/components/SignUp'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\t\t\t\t\t<Route exact path={Paths.signUp} component={SignUp} />\n\n\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config): void {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = (): void => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = (): void => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister(): void {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import 'sass/index.scss'\nimport 'sass/App.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from 'App'\nimport AppUnauthorized from 'AppUnauthorized'\nimport theme from 'theme'\nimport { auth } from 'ts/services/auth'\nimport { formatUser } from 'ts/services/user'\n\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser)\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<App user={user} />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<AppUnauthorized />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}